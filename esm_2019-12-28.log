[2019-12-28 16:11:20,396] [INFO] [akka.event.slf4j.Slf4jLogger] [] [default-akka.actor.default-dispatcher-6] - Slf4jLogger started {}
[2019-12-28 16:11:21,074] [INFO] [akka.actor.ActorSystemImpl] [] [default-akka.actor.default-dispatcher-7] - {
    # merge of application.conf @ file:/F:/EducationSystemManagement/service/target/scala-2.12/classes/application.conf: 15,reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 11,version.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/version.conf: 1,reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 12,akka-http-version.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/akka-http-version.conf: 1,reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http_2.12/jars/akka-http_2.12-10.1.11.jar!/reference.conf: 8,reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-stream_2.12/jars/akka-stream_2.12-2.6.1.jar!/reference.conf: 6-7
    "akka" : {
        # merge of reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 102,reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-stream_2.12/jars/akka-stream_2.12-2.6.1.jar!/reference.conf: 145
        "actor" : {
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 717
            # SECURITY BEST-PRACTICE is to disable java serialization for its multiple
            # known attack surfaces.
            # 
            # This setting is a short-cut to
            # - using DisabledJavaSerializer instead of JavaSerializer
            # 
            # Completely disable the use of `akka.serialization.JavaSerialization` by the
            # Akka Serialization extension, instead DisabledJavaSerializer will
            # be inserted which will fail explicitly if attempts to use java serialization are made.
            # 
            # The log messages emitted by such serializer SHOULD be treated as potential
            # attacks which the serializer prevented, as they MAY indicate an external operator
            # attempting to send malicious messages intending to use java serialization as attack vector.
            # The attempts are logged with the SECURITY marker.
            # 
            # Please note that this option does not stop you from manually invoking java serialization
            # 
            "allow-java-serialization" : "off",
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 116
            # Timeout for ActorSystem.actorOf
            "creation-timeout" : "20s",
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 665
            "debug" : {
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 682
                # enable DEBUG logging of all AutoReceiveMessages (Kill, PoisonPill etc.)
                "autoreceive" : "off",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 691
                # enable DEBUG logging of subscription changes on the eventStream
                "event-stream" : "off",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 688
                # enable DEBUG logging of all LoggingFSMs for events, transitions and timers
                "fsm" : "off",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 685
                # enable DEBUG logging of actor lifecycle changes
                "lifecycle" : "off",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 679
                # enable function of Actor.loggable(), which is to log any received message
                # at DEBUG level, see the “Testing Actor Systems” section of the Akka
                # Documentation at http://akka.io/docs
                "receive" : "off",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 697
                # enable WARN logging of misconfigured routers
                "router-misconfiguration" : "off",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 694
                # enable DEBUG logging of unhandled messages
                "unhandled" : "off"
            },
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 560
            "default-blocking-io-dispatcher" : {
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 562
                "executor" : "thread-pool-executor",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 565
                "thread-pool-executor" : {
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 566
                    "fixed-pool-size" : 16
                },
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 563
                "throughput" : 1,
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 561
                "type" : "Dispatcher"
            },
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 353
            "default-dispatcher" : {
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 386
                # This will be used if you have set "executor = "affinity-pool-executor""
                # Underlying thread pool implementation is akka.dispatch.affinity.AffinityPool.
                # This executor is classified as "ApiMayChange".
                "affinity-pool-executor" : {
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 441
                    # When using the "akka.dispatch.affinity.FairDistributionHashCache" queue selector
                    # internally the AffinityPool uses two methods to determine which task
                    # queue to allocate a Runnable to:
                    # - map based - maintains a round robin counter and a map of Runnable
                    # hashcodes to queues that they have been associated with. This ensures
                    # maximum fairness in terms of work distribution, meaning that each worker
                    # will get approximately equal amount of mailboxes to execute. This is suitable
                    # in cases where we have a small number of actors that will be scheduled on
                    # the pool and we want to ensure the maximum possible utilization of the
                    # available threads.
                    # - hash based - the task - queue in which the runnable should go is determined
                    # by using an uniformly distributed int to int hash function which uses the
                    # hash code of the Runnable as an input. This is preferred in situations where we
                    # have enough number of distinct actors to ensure statistically uniform
                    # distribution of work across threads or we are ready to sacrifice the
                    # former for the added benefit of avoiding map look-ups.
                    "fair-work-distribution" : {
                        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 451
                        # The value serves as a threshold which determines the point at which the
                        # pool switches from the first to the second work distribution schemes.
                        # For example, if the value is set to 128, the pool can observe up to
                        # 128 unique actors and schedule their mailboxes using the map based
                        # approach. Once this number is reached the pool switches to hash based
                        # task distribution mode. If the value is set to 0, the map based
                        # work distribution approach is disabled and only the hash based is
                        # used irrespective of the number of unique actors. Valid range is
                        # 0 to 2048 (inclusive)
                        "threshold" : 128
                    },
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 416
                    # Level of CPU time used, on a scale between 1 and 10, during backoff/idle.
                    # The tradeoff is that to have low latency more CPU time must be used to be
                    # able to react quickly on incoming messages or send as fast as possible after
                    # backoff backpressure.
                    # Level 1 strongly prefer low CPU consumption over low latency.
                    # Level 10 strongly prefer low latency over low CPU consumption.
                    "idle-cpu-level" : 5,
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 393
                    # The parallelism factor is used to determine thread pool size using the
                    # following formula: ceil(available processors * factor). Resulting size
                    # is then bounded by the parallelism-min and parallelism-max values.
                    "parallelism-factor" : 0.8,
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 396
                    # Max number of threads to cap factor-based parallelism number to.
                    "parallelism-max" : 64,
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 388
                    # Min number of threads to cap factor-based parallelism number to
                    "parallelism-min" : 4,
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 423
                    # FQCN of the akka.dispatch.affinity.QueueSelectorFactory.
                    # The Class of the FQCN must have a public constructor with a
                    # (com.typesafe.config.Config) parameter.
                    # A QueueSelectorFactory create instances of akka.dispatch.affinity.QueueSelector,
                    # that is responsible for determining which task queue a Runnable should be enqueued in.
                    "queue-selector" : "akka.dispatch.affinity.FairDistributionHashCache",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 408
                    # FQCN of the Rejection handler used in the pool.
                    # Must have an empty public constructor and must
                    # implement akka.actor.affinity.RejectionHandlerFactory.
                    "rejection-handler" : "akka.dispatch.affinity.ThrowOnOverflowRejectionHandler",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 403
                    # Each worker in the pool uses a separate bounded MPSC queue. This value
                    # indicates the upper bound of the queue. Whenever an attempt to enqueue
                    # a task is made and the queue does not have capacity to accommodate
                    # the task, the rejection handler created by the rejection handler specified
                    # in "rejection-handler" is invoked.
                    "task-queue-size" : 512
                },
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 538
                # For BalancingDispatcher: If the balancing dispatcher should attempt to
                # schedule idle actors using the same dispatcher when a message comes in,
                # and the dispatchers ExecutorService is not fully busy already.
                "attempt-teamwork" : "on",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 379
                # This will be used if you have set "executor = "default-executor"".
                # If an ActorSystem is created with a given ExecutionContext, this
                # ExecutionContext will be used as the default executor for all
                # dispatchers in the ActorSystem configured with
                # executor = "default-executor". Note that "default-executor"
                # is the default value for executor, and therefore used if not
                # specified otherwise. If no ExecutionContext is given,
                # the executor configured in "fallback" will be used.
                "default-executor" : {
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 380
                    "fallback" : "fork-join-executor"
                },
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 369
                # Which kind of ExecutorService to use for this dispatcher
                # Valid options:
                #  - "default-executor" requires a "default-executor" section
                #  - "fork-join-executor" requires a "fork-join-executor" section
                #  - "thread-pool-executor" requires a "thread-pool-executor" section
                #  - "affinity-pool-executor" requires an "affinity-pool-executor" section
                #  - A FQCN of a class extending ExecutorServiceConfigurator
                "executor" : "default-executor",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 457
                # This will be used if you have set "executor = "fork-join-executor""
                # Underlying thread pool implementation is java.util.concurrent.ForkJoinPool
                "fork-join-executor" : {
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 464
                    # The parallelism factor is used to determine thread pool size using the
                    # following formula: ceil(available processors * factor). Resulting size
                    # is then bounded by the parallelism-min and parallelism-max values.
                    "parallelism-factor" : 1,
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 467
                    # Max number of threads to cap factor-based parallelism number to
                    "parallelism-max" : 64,
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 459
                    # Min number of threads to cap factor-based parallelism number to
                    "parallelism-min" : 8,
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 471
                    # Setting to "FIFO" to use queue like peeking mode which "poll" or "LIFO" to use stack
                    # like peeking mode which "pop".
                    "task-peeking-mode" : "FIFO"
                },
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 543
                # If this dispatcher requires a specific type of mailbox, specify the
                # fully-qualified class name here; the actually created mailbox will
                # be a subtype of this type. The empty string signifies no requirement.
                "mailbox-requirement" : "",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 526
                # How long time the dispatcher will wait for new actors until it shuts down
                "shutdown-timeout" : "1s",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 476
                # This will be used if you have set "executor = "thread-pool-executor""
                # Underlying thread pool implementation is java.util.concurrent.ThreadPoolExecutor
                "thread-pool-executor" : {
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 522
                    # Allow core threads to time out
                    "allow-core-timeout" : "on",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 496
                    # The core-pool-size-factor is used to determine corePoolSize of the
                    # ThreadPoolExecutor using the following formula:
                    # ceil(available processors * factor).
                    # Resulting size is then bounded by the core-pool-size-min and
                    # core-pool-size-max values.
                    "core-pool-size-factor" : 3,
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 499
                    # Max number of threads to cap factor-based corePoolSize number to
                    "core-pool-size-max" : 64,
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 489
                    # Min number of threads to cap factor-based corePoolSize number to
                    "core-pool-size-min" : 8,
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 486
                    # Define a fixed thread pool size with this property. The corePoolSize
                    # and the maximumPoolSize of the ThreadPoolExecutor will be set to this
                    # value, if it is defined. Then the other pool-size properties will not
                    # be used.
                    # 
                    # Valid values are: `off` or a positive integer.
                    "fixed-pool-size" : "off",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 478
                    # Keep alive time for threads
                    "keep-alive-time" : "60s",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 509
                    # The max-pool-size-factor is used to determine maximumPoolSize of the
                    # ThreadPoolExecutor using the following formula:
                    # ceil(available processors * factor)
                    # The maximumPoolSize will not be less than corePoolSize.
                    # It is only used if using a bounded task queue.
                    "max-pool-size-factor" : 3,
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 512
                    # Max number of threads to cap factor-based maximumPoolSize number to
                    "max-pool-size-max" : 64,
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 502
                    # Minimum number of threads to cap factor-based maximumPoolSize number to
                    "max-pool-size-min" : 8,
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 515
                    # Specifies the bounded capacity of the task queue (< 1 == unbounded)
                    "task-queue-size" : -1,
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 519
                    # Specifies which type of task queue will be used, can be "array" or
                    # "linked" (default)
                    "task-queue-type" : "linked"
                },
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 530
                # Throughput defines the number of messages that are processed in a batch
                # before the thread is returned to the pool. Set to 1 for as fair as possible.
                "throughput" : 5,
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 533
                # Throughput deadline for Dispatcher, set to 0 or negative for no deadline
                "throughput-deadline-time" : "0ms",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 360
                # Must be one of the following
                # Dispatcher, PinnedDispatcher, or a FQCN to a class inheriting
                # MessageDispatcherConfigurator with a public constructor with
                # both com.typesafe.config.Config parameter and
                # akka.dispatch.DispatcherPrerequisites parameters.
                # PinnedDispatcher must be used together with executor=thread-pool-executor.
                "type" : "Dispatcher"
            },
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 570
            "default-mailbox" : {
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 581
                # If the mailbox is bounded then it uses this setting to determine its
                # capacity. The provided value must be positive.
                # NOTICE:
                # Up to version 2.1 the mailbox type was determined based on this setting;
                # this is no longer the case, the type must explicitly be a bounded mailbox.
                "mailbox-capacity" : 1000,
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 586
                # If the mailbox is bounded then this is the timeout for enqueueing
                # in case the mailbox is full. Negative values signify infinite
                # timeout, which should be avoided as it bears the risk of dead-lock.
                "mailbox-push-timeout-time" : "10s",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 574
                # FQCN of the MailboxType. The Class of the FQCN must have a public
                # constructor with
                # (akka.actor.ActorSystem.Settings, com.typesafe.config.Config) parameters.
                "mailbox-type" : "akka.dispatch.UnboundedMailbox",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 592
                # For Actor with Stash: The default capacity of the stash.
                # If negative (or zero) then an unbounded stash is used (default)
                # If positive then a bounded stash is used and the capacity is set using
                # the property
                "stash-capacity" : -1
            },
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 160
            "deployment" : {
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 346
                "/IO-DNS/async-dns" : {
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 347
                    "mailbox" : "unbounded",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 349
                    "nr-of-instances" : 1,
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 348
                    "router" : "round-robin-pool"
                },
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 336
                "/IO-DNS/inet-address" : {
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 337
                    "mailbox" : "unbounded",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 339
                    "nr-of-instances" : 4,
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 338
                    "router" : "consistent-hashing-pool"
                },
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 342
                "/IO-DNS/inet-address/*" : {
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 343
                    "dispatcher" : "akka.actor.default-blocking-io-dispatcher"
                },
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 163
                # deployment id pattern - on the format: /parent/child etc.
                "default" : {
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 169
                    # The id of the dispatcher to use for this actor.
                    # If undefined or empty the dispatcher specified in code
                    # (Props.withDispatcher) is used, or default-dispatcher if not
                    # specified at all.
                    "dispatcher" : "",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 177
                    # The id of the mailbox to use for this actor.
                    # If undefined or empty the default mailbox of the configured dispatcher
                    # is used or if there is no mailbox configuration the mailbox specified
                    # in code (Props.withMailbox) is used.
                    # If there is a mailbox defined in the configured dispatcher then that
                    # overrides this setting.
                    "mailbox" : "",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 202
                    # number of children to create in case of a router;
                    # this setting is ignored if routees.paths is given
                    "nr-of-instances" : 1,
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 282
                    # Routers with dynamically resizable number of routees based on
                    # performance metrics.
                    # This feature is enabled by including (parts of) this section in
                    # the deployment, cannot be enabled together with default resizer.
                    "optimal-size-exploring-resizer" : {
                        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 298
                        # Interval between each resize attempt
                        "action-interval" : "5s",
                        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 311
                        # Probability of doing an exploration v.s. optmization.
                        "chance-of-exploration" : 0.4,
                        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 295
                        # probability of doing a ramping down when all routees are busy
                        # during exploration.
                        "chance-of-ramping-down-when-full" : 0.2,
                        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 302
                        # If the routees have not been fully utilized (i.e. all routees busy)
                        # for such length, the resizer will downsize the pool.
                        "downsize-after-underutilized-for" : "72h",
                        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 319
                        # When downsizing after a long streak of underutilization, the resizer
                        # will downsize the pool to the highest utiliziation multiplied by a
                        # a downsize ratio. This downsize ratio determines the new pools size
                        # in comparison to the highest utilization.
                        # E.g. if the highest utilization is 10, and the down size ratio
                        # is 0.8, the pool will be downsized to 8
                        "downsize-ratio" : 0.8,
                        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 284
                        "enabled" : "off",
                        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 308
                        # Duration exploration, the ratio between the largest step size and
                        # current pool size. E.g. if the current pool size is 50, and the
                        # explore-step-size is 0.1, the maximum pool size change during
                        # exploration will be +- 5
                        "explore-step-size" : 0.1,
                        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 287
                        # The fewest number of routees the router should ever have.
                        "lower-bound" : 1,
                        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 323
                        # When optimizing, the resizer only considers the sizes adjacent to the
                        # current size. This number indicates how many adjacent sizes to consider.
                        "optimization-range" : 16,
                        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 291
                        # The most number of routees the router should ever have.
                        # Must be greater than or equal to lower-bound.
                        "upper-bound" : 10,
                        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 332
                        # The weight of the latest metric over old metrics when collecting
                        # performance metrics.
                        # E.g. if the last processing speed is 10 millis per message at pool
                        # size 5, and if the new processing speed collected is 6 millis per
                        # message at pool size 5. Given a weight of 0.3, the metrics
                        # representing pool size 5 will be 6 * 0.3 + 10 * 0.7, i.e. 8.8 millis
                        # Obviously, this number should be between 0 and 1.
                        "weight-of-latest-metric" : 0.5
                    },
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 233
                    # Routers with dynamically resizable number of routees; this feature is
                    # enabled by including (parts of) this section in the deployment
                    "resizer" : {
                        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 271
                        # Fraction of routees to be removed when the resizer reaches the
                        # backoffThreshold.
                        # For example, 0.1 would decrease 10% (rounded up), i.e. if current
                        # capacity is 9 it will request an decrease of 1 routee.
                        "backoff-rate" : 0.1,
                        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 265
                        # Minimum fraction of busy routees before backing off.
                        # For example, if this is 0.3, then we'll remove some routees only when
                        # less than 30% of routees are busy, i.e. if current capacity is 10 and
                        # 3 are busy then the capacity is unchanged, but if 2 or less are busy
                        # the capacity is decreased.
                        # Use 0.0 or negative to avoid removal of routees.
                        "backoff-threshold" : 0.3,
                        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 235
                        "enabled" : "off",
                        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 238
                        # The fewest number of routees the router should ever have.
                        "lower-bound" : 1,
                        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 275
                        # Number of messages between resize operation.
                        # Use 1 to resize before each message.
                        "messages-per-resize" : 10,
                        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 252
                        # Threshold used to evaluate if a routee is considered to be busy
                        # (under pressure). Implementation depends on this value (default is 1).
                        # 0:   number of routees currently processing a message.
                        # 1:   number of routees currently processing a message has
                        #      some messages in mailbox.
                        # > 1: number of routees with at least the configured pressure-threshold
                        #      messages in their mailbox. Note that estimating mailbox size of
                        #      default UnboundedMailbox is O(N) operation.
                        "pressure-threshold" : 1,
                        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 257
                        # Percentage to increase capacity whenever all routees are busy.
                        # For example, 0.2 would increase 20% (rounded up), i.e. if current
                        # capacity is 6 it will request an increase of 2 more routees.
                        "rampup-rate" : 0.2,
                        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 242
                        # The most number of routees the router should ever have.
                        # Must be greater than or equal to lower-bound.
                        "upper-bound" : 10
                    },
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 215
                    "routees" : {
                        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 219
                        # Alternatively to giving nr-of-instances you can specify the full
                        # paths of those actors which should be routed to. This setting takes
                        # precedence over nr-of-instances
                        "paths" : []
                    },
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 198
                    # routing (load-balance) scheme to use
                    # - available: "from-code", "round-robin", "random", "smallest-mailbox",
                    #              "scatter-gather", "broadcast"
                    # - or:        Fully qualified class name of the router class.
                    #              The class must extend akka.routing.CustomRouterConfig and
                    #              have a public constructor with com.typesafe.config.Config
                    #              and optional akka.actor.DynamicAccess parameter.
                    # - default is "from-code";
                    # Whether or not an actor is transformed to a Router is decided in code
                    # only (Props.withRouter). The type of router can be overridden in the
                    # configuration; specifying "from-code" means that the values specified
                    # in the code shall be used.
                    # In case of routing, the actors to be routed to can be specified
                    # in several ways:
                    # - nr-of-instances: will create that many children
                    # - routees.paths: will route messages to these paths using ActorSelection,
                    #   i.e. will not create children
                    # - resizer: dynamically resizable number of routees as specified in
                    #   resizer below
                    "router" : "from-code",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 210
                    "tail-chopping-router" : {
                        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 212
                        # interval is duration between sending message to next routee
                        "interval" : "10 milliseconds"
                    },
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 208
                    # number of virtual nodes per node for consistent-hashing router
                    "virtual-nodes-factor" : 10,
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 205
                    # within is the timeout used for routers containing future calls
                    "within" : "5 seconds"
                }
            },
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 113
            # The guardian "/user" will use this class to obtain its supervisorStrategy.
            # It needs to be a subclass of akka.actor.SupervisorStrategyConfigurator.
            # In addition to the default there is akka.actor.StoppingSupervisorStrategy.
            "guardian-supervisor-strategy" : "akka.actor.DefaultSupervisorStrategy",
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 549
            # Default separate internal dispatcher to run Akka internal tasks and actors on
            # protecting them against starvation because of accidental blocking in user actors (which run on the
            # default dispatcher)
            "internal-dispatcher" : {
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 551
                "executor" : "fork-join-executor",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 553
                "fork-join-executor" : {
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 555
                    "parallelism-factor" : 1,
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 556
                    "parallelism-max" : 64,
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 554
                    "parallelism-min" : 4
                },
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 552
                "throughput" : 5,
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 550
                "type" : "Dispatcher"
            },
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 595
            "mailbox" : {
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 650
                "bounded-control-aware-queue-based" : {
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 664
                    # FQCN of the MailboxType, The Class of the FQCN must have a public
                    # constructor with (akka.actor.ActorSystem.Settings,
                    # com.typesafe.config.Config) parameters.
                    "mailbox-type" : "akka.dispatch.BoundedControlAwareMailbox"
                },
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 636
                "bounded-deque-based" : {
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 650
                    # FQCN of the MailboxType, The Class of the FQCN must have a public
                    # constructor with (akka.actor.ActorSystem.Settings,
                    # com.typesafe.config.Config) parameters.
                    "mailbox-type" : "akka.dispatch.BoundedDequeBasedMailbox"
                },
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 622
                "bounded-queue-based" : {
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 636
                    # FQCN of the MailboxType, The Class of the FQCN must have a public
                    # constructor with (akka.actor.ActorSystem.Settings,
                    # com.typesafe.config.Config) parameters.
                    "mailbox-type" : "akka.dispatch.BoundedMailbox"
                },
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 660
                # The LoggerMailbox will drain all messages in the mailbox
                # when the system is shutdown and deliver them to the StandardOutLogger.
                # Do not change this unless you know what you are doing.
                "logger-queue" : {
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 671
                    "mailbox-type" : "akka.event.LoggerMailboxType"
                },
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 602
                # Mapping between message queue semantics and mailbox configurations.
                # Used by akka.dispatch.RequiresMessageQueue[T] to enforce different
                # mailbox types on actors.
                # If your Actor implements RequiresMessageQueue[T], then when you create
                # an instance of that actor its mailbox type will be decided by looking
                # up a mailbox configuration via T in this mapping
                "requirements" : {
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 620
                    "akka.dispatch.BoundedControlAwareMessageQueueSemantics" : "akka.actor.mailbox.bounded-control-aware-queue-based",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 612
                    "akka.dispatch.BoundedDequeBasedMessageQueueSemantics" : "akka.actor.mailbox.bounded-deque-based",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 606
                    "akka.dispatch.BoundedMessageQueueSemantics" : "akka.actor.mailbox.bounded-queue-based",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 616
                    "akka.dispatch.ControlAwareMessageQueueSemantics" : "akka.actor.mailbox.unbounded-control-aware-queue-based",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 608
                    "akka.dispatch.DequeBasedMessageQueueSemantics" : "akka.actor.mailbox.unbounded-deque-based",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 614
                    "akka.dispatch.MultipleConsumerSemantics" : "akka.actor.mailbox.unbounded-queue-based",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 618
                    "akka.dispatch.UnboundedControlAwareMessageQueueSemantics" : "akka.actor.mailbox.unbounded-control-aware-queue-based",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 610
                    "akka.dispatch.UnboundedDequeBasedMessageQueueSemantics" : "akka.actor.mailbox.unbounded-deque-based",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 604
                    "akka.dispatch.UnboundedMessageQueueSemantics" : "akka.actor.mailbox.unbounded-queue-based",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 622
                    "akka.event.LoggerMessageQueueSemantics" : "akka.actor.mailbox.logger-queue"
                },
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 643
                "unbounded-control-aware-queue-based" : {
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 657
                    # FQCN of the MailboxType, The Class of the FQCN must have a public
                    # constructor with (akka.actor.ActorSystem.Settings,
                    # com.typesafe.config.Config) parameters.
                    "mailbox-type" : "akka.dispatch.UnboundedControlAwareMailbox"
                },
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 629
                "unbounded-deque-based" : {
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 643
                    # FQCN of the MailboxType, The Class of the FQCN must have a public
                    # constructor with (akka.actor.ActorSystem.Settings,
                    # com.typesafe.config.Config) parameters.
                    "mailbox-type" : "akka.dispatch.UnboundedDequeBasedMailbox"
                },
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 615
                "unbounded-queue-based" : {
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 629
                    # FQCN of the MailboxType, The Class of the FQCN must have a public
                    # constructor with (akka.actor.ActorSystem.Settings,
                    # com.typesafe.config.Config) parameters.
                    "mailbox-type" : "akka.dispatch.UnboundedMailbox"
                }
            },
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 129
            # If serialize-messages or serialize-creators are enabled classes that starts with
            # a prefix listed here are not verified.
            "no-serialization-verification-needed-class-prefix" : [
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 129
                "akka."
            ],
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 108
            # Either one of "local", "remote" or "cluster" or the
            # FQCN of the ActorRefProvider to be used; the below is the built-in default,
            # note that "remote" and "cluster" requires the akka-remote and akka-cluster
            # artifacts to be on the classpath.
            "provider" : "local",
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 142
            "router" : {
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 142
                # Mapping between ´deployment.router' short names to fully qualified class names
                "type-mapping" : {
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 148
                    "balancing-pool" : "akka.routing.BalancingPool",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 151
                    "broadcast-group" : "akka.routing.BroadcastGroup",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 150
                    "broadcast-pool" : "akka.routing.BroadcastPool",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 157
                    "consistent-hashing-group" : "akka.routing.ConsistentHashingGroup",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 156
                    "consistent-hashing-pool" : "akka.routing.ConsistentHashingPool",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 143
                    "from-code" : "akka.routing.NoRouter",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 147
                    "random-group" : "akka.routing.RandomGroup",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 146
                    "random-pool" : "akka.routing.RandomPool",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 145
                    "round-robin-group" : "akka.routing.RoundRobinGroup",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 144
                    "round-robin-pool" : "akka.routing.RoundRobinPool",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 153
                    "scatter-gather-group" : "akka.routing.ScatterGatherFirstCompletedGroup",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 152
                    "scatter-gather-pool" : "akka.routing.ScatterGatherFirstCompletedPool",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 149
                    "smallest-mailbox-pool" : "akka.routing.SmallestMailboxPool",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 155
                    "tail-chopping-group" : "akka.routing.TailChoppingGroup",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 154
                    "tail-chopping-pool" : "akka.routing.TailChoppingPool"
                }
            },
            # merge of reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 739,reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-stream_2.12/jars/akka-stream_2.12-2.6.1.jar!/reference.conf: 151
            # Class to Serializer binding. You only need to specify the name of an
            # interface or abstract base class of the messages. In case of ambiguity it
            # is using the most specific configured class, or giving a warning and
            # choosing the “first” one.
            # 
            # To disable one of the default serializers, assign its class to "none", like
            # "java.io.Serializable" = none
            "serialization-bindings" : {
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 750
                "[B" : "bytes",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-stream_2.12/jars/akka-stream_2.12-2.6.1.jar!/reference.conf: 152
                "akka.stream.SinkRef" : "akka-stream-ref",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-stream_2.12/jars/akka-stream_2.12-2.6.1.jar!/reference.conf: 153
                "akka.stream.SourceRef" : "akka-stream-ref",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-stream_2.12/jars/akka-stream_2.12-2.6.1.jar!/reference.conf: 154
                "akka.stream.impl.streamref.StreamRefsProtocol" : "akka-stream-ref",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 755
                "akka.util.ByteString$ByteString1" : "primitive-bytestring",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 754
                "akka.util.ByteString$ByteString1C" : "primitive-bytestring",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 756
                "akka.util.ByteString$ByteStrings" : "primitive-bytestring",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 751
                "java.io.Serializable" : "java",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 761
                "java.lang.Boolean" : "primitive-boolean",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 759
                "java.lang.Integer" : "primitive-int",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 757
                "java.lang.Long" : "primitive-long",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 753
                "java.lang.String" : "primitive-string",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 762
                "scala.Boolean" : "primitive-boolean",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 760
                "scala.Int" : "primitive-int",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 758
                "scala.Long" : "primitive-long"
            },
            # merge of reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 761,reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-stream_2.12/jars/akka-stream_2.12-2.6.1.jar!/reference.conf: 157
            # Configuration namespace of serialization identifiers.
            # Each serializer implementation must have an entry in the following format:
            # `akka.actor.serialization-identifiers."FQCN" = ID`
            # where `FQCN` is fully qualified class name of the serializer implementation
            # and `ID` is globally unique serializer identifier number.
            # Identifier values from 0 to 40 are reserved for Akka internal usage.
            "serialization-identifiers" : {
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 773
                "akka.serialization.ByteArraySerializer" : 4,
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 772
                "akka.serialization.JavaSerializer" : 1,
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-stream_2.12/jars/akka-stream_2.12-2.6.1.jar!/reference.conf: 158
                "akka.stream.serialization.StreamRefSerializer" : 30,
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 779
                "primitive-boolean" : 35,
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 778
                "primitive-bytestring" : 21,
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 776
                "primitive-int" : 19,
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 775
                "primitive-long" : 18,
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 777
                "primitive-string" : 20
            },
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 125
            # Serializes and deserializes creators (in Props) to ensure that they can be
            # sent over the network, this is only intended for testing. Purely local deployments
            # as marked with deploy.scope == LocalScope are exempt from verification.
            "serialize-creators" : "off",
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 120
            # Serializes and deserializes (non-primitive) messages to ensure immutability,
            # this is only intended for testing.
            "serialize-messages" : "off",
            # merge of reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 722,reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-stream_2.12/jars/akka-stream_2.12-2.6.1.jar!/reference.conf: 147
            # Entries for pluggable serializers and their bindings.
            "serializers" : {
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-stream_2.12/jars/akka-stream_2.12-2.6.1.jar!/reference.conf: 148
                "akka-stream-ref" : "akka.stream.serialization.StreamRefSerializer",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 734
                "bytes" : "akka.serialization.ByteArraySerializer",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 733
                "java" : "akka.serialization.JavaSerializer",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 739
                "primitive-boolean" : "akka.serialization.BooleanSerializer",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 738
                "primitive-bytestring" : "akka.serialization.ByteStringSerializer",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 736
                "primitive-int" : "akka.serialization.IntSerializer",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 735
                "primitive-long" : "akka.serialization.LongSerializer",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 737
                "primitive-string" : "akka.serialization.StringSerializer"
            },
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 136
            "typed" : {
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 138
                # Default timeout for typed actor methods with non-void return type
                "timeout" : "5s"
            },
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 134
            # Timeout for send operations to top-level actors which are in the process
            # of being started. This is only relevant if using a bounded mailbox or the
            # CallingThreadDispatcher for a top-level actor.
            "unstarted-push-timeout" : "10s",
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 723
            # Log warnings when the Java serialization is used to serialize messages.
            # Java serialization is not very performant and should not be used in production
            # environments unless you don't care about performance and security. In that case
            # you can turn this off.
            "warn-about-java-serializer-usage" : "on",
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 729
            # To be used with the above warn-about-java-serializer-usage
            # When warn-about-java-serializer-usage = on, and this warn-on-no-serialization-verification = off,
            # warnings are suppressed for classes extending NoSerializationVerificationNeeded
            # to reduce noise.
            "warn-on-no-serialization-verification" : "on"
        },
        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1135
        # CoordinatedShutdown is an extension that will perform registered
        # tasks in the order that is defined by the phases. It is started
        # by calling CoordinatedShutdown(system).run(). This can be triggered
        # by different things, for example:
        # - JVM shutdown hook will by default run CoordinatedShutdown
        # - Cluster node will automatically run CoordinatedShutdown when it
        #   sees itself as Exiting
        # - A management console or other application specific command can
        #   run CoordinatedShutdown
        "coordinated-shutdown" : {
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1148
            # The timeout that will be used for a phase if not specified with
            # 'timeout' in the phase
            "default-phase-timeout" : "5 s",
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1160
            # Exit status to use on System.exit(int) when 'exit-jvm' is 'on'.
            "exit-code" : 0,
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1157
            # Exit the JVM (System.exit(0)) in the last phase actor-system-terminate
            # if this is set to 'on'. It is done after termination of the
            # ActorSystem if terminate-actor-system=on, otherwise it is done
            # immediately when the last phase is reached.
            "exit-jvm" : "off",
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1199
            # //#coordinated-shutdown-phases
            # CoordinatedShutdown is enabled by default and will run the tasks that
            # are added to these phases by individual Akka modules and user logic.
            # 
            # The phases are ordered as a DAG by defining the dependencies between the phases
            # to make sure shutdown tasks are run in the right order.
            # 
            # In general user tasks belong in the first few phases, but there may be use
            # cases where you would want to hook in new phases or register tasks later in
            # the DAG.
            # 
            # Each phase is defined as a named config section with the
            # following optional properties:
            # - timeout=15s: Override the default-phase-timeout for this phase.
            # - recover=off: If the phase fails the shutdown is aborted
            #                and depending phases will not be executed.
            # - enabled=off: Skip all tasks registered in this phase. DO NOT use
            #                this to disable phases unless you are absolutely sure what the
            #                consequences are. Many of the built in tasks depend on other tasks
            #                having been executed in earlier phases and may break if those are disabled.
            # depends-on=[]: Run the phase after the given phases
            "phases" : {
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1278
                # Last phase. See terminate-actor-system and exit-jvm above.
                # Don't add phases that depends on this phase because the
                # dispatcher and scheduler of the ActorSystem have been shutdown.
                # This phase is not meant for users to add tasks to.
                "actor-system-terminate" : {
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1280
                    "depends-on" : [
                        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1290
                        "before-actor-system-terminate"
                    ],
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1289
                    "timeout" : "10 s"
                },
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1270
                # Phase for custom application tasks that are to be run
                # after cluster shutdown and before ActorSystem termination.
                "before-actor-system-terminate" : {
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1271
                    "depends-on" : [
                        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1281
                        "cluster-shutdown"
                    ]
                },
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1230
                # Phase for custom application tasks that are to be run
                # after service shutdown and before cluster shutdown.
                "before-cluster-shutdown" : {
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1231
                    "depends-on" : [
                        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1241
                        "service-stop"
                    ]
                },
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1205
                # The first pre-defined phase that applications can add tasks to.
                # Note that more phases can be added in the application's
                # configuration by overriding this phase with an additional
                # depends-on.
                "before-service-unbind" : {},
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1251
                # Shutdown cluster singletons
                # This is done as late as possible to allow the shard region shutdown triggered in
                # the "cluster-sharding-shutdown-region" phase to complete before the shard coordinator is shut down.
                # This phase is not meant for users to add tasks to.
                "cluster-exiting" : {
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1253
                    "depends-on" : [
                        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1263
                        "cluster-leave"
                    ],
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1262
                    "timeout" : "10 s"
                },
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1258
                # Wait until exiting has been completed
                # This phase is not meant for users to add tasks to.
                "cluster-exiting-done" : {
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1259
                    "depends-on" : [
                        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1269
                        "cluster-exiting"
                    ]
                },
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1243
                # Emit the leave command for the node that is shutting down.
                # This phase is not meant for users to add tasks to.
                "cluster-leave" : {
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1244
                    "depends-on" : [
                        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1254
                        "cluster-sharding-shutdown-region"
                    ]
                },
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1236
                # Graceful shutdown of the Cluster Sharding regions.
                # This phase is not meant for users to add tasks to.
                "cluster-sharding-shutdown-region" : {
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1238
                    "depends-on" : [
                        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1248
                        "before-cluster-shutdown"
                    ],
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1247
                    "timeout" : "10 s"
                },
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1264
                # Shutdown the cluster extension
                # This phase is not meant for users to add tasks to.
                "cluster-shutdown" : {
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1265
                    "depends-on" : [
                        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1275
                        "cluster-exiting-done"
                    ]
                },
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1218
                # Wait for requests that are in progress to be completed.
                # This is where you register tasks that will wait for already established connections to complete, potentially
                # also first telling them that it is time to close down.
                "service-requests-done" : {
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1219
                    "depends-on" : [
                        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1229
                        "service-unbind"
                    ]
                },
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1224
                # Final shutdown of service endpoints.
                # This is where you would add tasks that forcefully kill connections that are still around.
                "service-stop" : {
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1225
                    "depends-on" : [
                        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1235
                        "service-requests-done"
                    ]
                },
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1211
                # Stop accepting new incoming connections.
                # This is where you can register tasks that makes a server stop accepting new connections. Already
                # established connections should be allowed to continue and complete if possible.
                "service-unbind" : {
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1212
                    "depends-on" : [
                        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1222
                        "before-service-unbind"
                    ]
                }
            },
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1166
            # When Coordinated Shutdown is triggered an instance of `Reason` is
            # required. That value can be used to override the default settings.
            # Only 'exit-jvm', 'exit-code' and 'terminate-actor-system' may be
            # overridden depending on the reason.
            "reason-overrides" : {
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1170
                # Overrides are applied using the `reason.getClass.getName`.
                # Overrides the `exit-code` when the `Reason` is a cluster
                # Downing or a Cluster Join Unsuccessful event
                "akka.actor.CoordinatedShutdown$ClusterDowningReason$" : {
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1181
                    "exit-code" : -1
                },
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1173
                "akka.actor.CoordinatedShutdown$ClusterJoinUnsuccessfulReason$" : {
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1184
                    "exit-code" : -1
                }
            },
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1170
            # Run the coordinated shutdown when ActorSystem.terminate is called.
            # Enabling this and disabling terminate-actor-system is not a supported
            # combination (will throw ConfigurationException at startup).
            "run-by-actor-system-terminate" : "on",
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1165
            # Run the coordinated shutdown when the JVM process exits, e.g.
            # via kill SIGTERM signal (SIGINT ctrl-c doesn't work).
            # This property is related to `akka.jvm-shutdown-hooks` above.
            "run-by-jvm-shutdown-hook" : "on",
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1151
            # Terminate the ActorSystem in the last phase actor-system-terminate.
            "terminate-actor-system" : "on"
        },
        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 83
        # Toggles whether threads created by this ActorSystem should be daemons or not
        "daemonic" : "off",
        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 80
        # List FQCN of extensions which shall be loaded at actor system startup.
        # Should be on the format: 'extensions = ["foo", "bar"]' etc.
        # See the Akka Documentation for more info about Extensions
        "extensions" : [],
        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 100
        # Version must be the same across all modules and if they are different the startup
        # will fail. It's possible but not recommended, to disable this check, and only log a warning,
        # by setting this property to `off`.
        "fail-mixed-versions" : "on",
        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 13
        # Home directory of Akka, modules in the deploy directory will be loaded
        "home" : "",
        # merge of reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 12,akka-http-version.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/akka-http-version.conf: 1,reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http_2.12/jars/akka-http_2.12-10.1.11.jar!/reference.conf: 8
        "http" : {
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 264
            "client" : {
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 272
                # The time period within which the TCP connecting process must be completed.
                "connecting-timeout" : "10s",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 276
                # The time after which an idle connection will be automatically closed.
                # Set to `infinite` to completely disable idle timeouts.
                "idle-timeout" : "60 s",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 323
                # Enables/disables the logging of unencrypted HTTP traffic to and from the HTTP
                # client for debugging reasons.
                # 
                # Note: Use with care. Logging of unencrypted data traffic may expose secret data.
                # 
                # Incoming and outgoing traffic will be logged in hexdump format. To enable logging,
                # specify the number of bytes to log per chunk of data (the actual chunking depends
                # on implementation details and networking conditions and should be treated as
                # arbitrary).
                # 
                # For logging on the server side, see akka.http.server.log-unencrypted-network-bytes.
                # 
                # `off` : no log messages are produced
                # Int   : determines how many bytes should be logged per data chunk
                "log-unencrypted-network-bytes" : "off",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 305
                # Modify to tweak parsing settings on the client-side only.
                "parsing" : {},
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 297
                # Client https proxy options. When using ClientTransport.httpsProxy() with or without credentials,
                # host/port must be either passed explicitly or set here. If a host is not set, the proxy will not be used.
                "proxy" : {
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 298
                    "https" : {
                        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 299
                        "host" : "",
                        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 300
                        "port" : 443
                    }
                },
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 281
                # The initial size of the buffer to render the request headers in.
                # Can be used for fine-tuning request rendering performance but probably
                # doesn't have to be fiddled with in most applications.
                "request-header-size-hint" : 512,
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 285
                # Socket options to set for the listening socket. If a setting is left
                # undefined, it will use whatever the default on the system is.
                "socket-options" : {
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 286
                    "so-receive-buffer-size" : "undefined",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 288
                    "so-reuse-address" : "undefined",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 287
                    "so-send-buffer-size" : "undefined",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 289
                    "so-traffic-class" : "undefined",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 290
                    "tcp-keep-alive" : "undefined",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 292
                    "tcp-no-delay" : "undefined",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 291
                    "tcp-oob-inline" : "undefined"
                },
                # merge of reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 269,akka-http-version.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/akka-http-version.conf: 1
                "user-agent-header" : "akka-http/10.1.11",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 325
                "websocket" : {
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 340
                    # Interval for sending periodic keep-alives
                    # The frame sent will be the onne configured in akka.http.server.websocket.periodic-keep-alive-mode
                    # `infinite` by default, or a duration that is the max idle interval after which an keep-alive frame should be sent
                    "periodic-keep-alive-max-idle" : "infinite",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 335
                    # periodic keep alive may be implemented using by sending Ping frames
                    # upon which the other side is expected to reply with a Pong frame,
                    # or by sending a Pong frame, which serves as unidirectional heartbeat.
                    # Valid values:
                    #   ping - default, for bi-directional ping/pong keep-alive heartbeating
                    #   pong - for uni-directional pong keep-alive heartbeating
                    # 
                    # See https://tools.ietf.org/html/rfc6455#section-5.5.2
                    # and https://tools.ietf.org/html/rfc6455#section-5.5.3 for more information
                    "periodic-keep-alive-mode" : "ping"
                }
            },
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 344
            "host-connection-pool" : {
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 402
                # The minimum duration to backoff new connection attempts after the previous connection attempt failed.
                # 
                # The pool uses an exponential randomized backoff scheme. After the first failure, the next attempt will only be
                # tried after a random duration between the base connection backoff and twice the base connection backoff. If that
                # attempt fails as well, the next attempt will be delayed by twice that amount. The total delay is capped using the
                # `max-connection-backoff` setting.
                # 
                # The backoff applies for the complete pool. I.e. after one failed connection attempt, further connection attempts
                # to that host will backoff for all connections of the pool. After the service recovered, connections will come out
                # of backoff one by one due to the random extra backoff time. This is to avoid overloading just recently recovered
                # services with new connections ("thundering herd").
                # 
                # Example: base-connection-backoff = 100ms, max-connection-backoff = 10 seconds
                #   - After 1st failure, backoff somewhere between 100ms and 200ms
                #   - After 2nd, between  200ms and  400ms
                #   - After 3rd, between  200ms and  400ms
                #   - After 4th, between  400ms and  800ms
                #   - After 5th, between  800ms and 1600ms
                #   - After 6th, between 1600ms and 3200ms
                #   - After 7th, between 3200ms and 6400ms
                #   - After 8th, between 5000ms and 10 seconds (max capped by max-connection-backoff, min by half of that)
                #   - After 9th, etc., stays between 5000ms and 10 seconds
                # 
                # This setting only applies to the new pool implementation and is ignored for the legacy one.
                "base-connection-backoff" : "100ms",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 426
                # Modify this section to tweak client settings only for host connection pools APIs like `Http().superPool` or
                # `Http().singleRequest`.
                "client" : {},
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 412
                # The time after which an idle connection pool (without pending requests)
                # will automatically terminate itself. Set to `infinite` to completely disable idle timeouts.
                "idle-timeout" : "30 s",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 408
                # Maximum backoff duration between failed connection attempts. For more information see the above comment for the
                # `base-connection-backoff` setting.
                # 
                # This setting only applies to the new pool implementation and is ignored for the legacy one.
                "max-connection-backoff" : "2 min",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 373
                # The maximum duration for a connection to be kept alive
                # This amount gets modified by a 10 percent fuzzyness to avoid the simultanous reconnections
                # defaults to 'infinite'
                # Note that this is only implemented in the new host connection pool
                "max-connection-lifetime" : "infinite",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 347
                # The maximum number of parallel connections that a connection pool to a
                # single host endpoint is allowed to establish. Must be greater than zero.
                "max-connections" : 4,
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 367
                # The maximum number of open requests accepted into the pool across all
                # materializations of any of its client flows.
                # Protects against (accidentally) overloading a single pool with too many client flow materializations.
                # Note that with N concurrent materializations the max number of open request in the pool
                # will never exceed N * max-connections * pipelining-limit.
                # Must be a power of 2 and > 0!
                "max-open-requests" : 32,
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 359
                # The maximum number of times failed requests are attempted again,
                # (if the request can be safely retried) before giving up and returning an error.
                # Set to zero to completely disable request retries.
                "max-retries" : 5,
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 354
                # The minimum number of parallel connections that a pool should keep alive ("hot").
                # If the number of connections is falling below the given threshold, new ones are being spawned.
                # You can use this setting to build a hot pool of "always on" connections.
                # Default is 0, meaning there might be no active connection at given moment.
                # Keep in mind that `min-connections` should be smaller than `max-connections` or equal
                "min-connections" : 0,
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 376
                # Client-side pipelining is not currently supported. See https://github.com/akka/akka-http/issues/32
                "pipelining-limit" : 1,
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 417
                # The pool implementation to use. Currently supported are:
                #  - legacy: the original 10.0.x pool implementation
                #  - new: the pool implementation that became the default in 10.1.x and will receive fixes and new features
                "pool-implementation" : "new",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 422
                # The "new" pool implementation will fail a connection early and clear the slot if a response entity was not
                # subscribed during the given time period after the response was dispatched. In busy systems the timeout might be
                # too tight if a response is not picked up quick enough after it was dispatched by the pool.
                "response-entity-subscription-timeout" : "1.second"
            },
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 436
            # Modify to tweak default parsing settings.
            # 
            # IMPORTANT:
            # Please note that this sections settings can be overridden by the corresponding settings in:
            # `akka.http.server.parsing`, `akka.http.client.parsing` or `akka.http.host-connection-pool.client.parsing`.
            "parsing" : {
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 482
                # Sets the parsing mode for parsing cookies.
                # The following value are defined:
                # 
                # `rfc6265`: Only RFC6265-compliant cookies are parsed. Surrounding double-quotes are accepted and
                #   automatically removed. Non-compliant cookies are silently discarded.
                # `raw`: Raw parsing allows any non-control character but ';' to appear in a cookie value. There's no further
                #   post-processing applied, so that the resulting value string may contain any number of whitespace, unicode,
                #   double quotes, or '=' characters at any position.
                #   The rules for parsing the cookie name are the same ones from RFC 6265.
                # 
                "cookie-parsing-mode" : "rfc6265",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 518
                # Configures the verbosity with which message (request or response) parsing
                # errors are written to the application log.
                # 
                # Supported settings:
                # `off`   : no log messages are produced
                # `simple`: a condensed single-line message is logged
                # `full`  : the full error details (potentially spanning several lines) are logged
                "error-logging-verbosity" : "full",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 531
                # limits for the number of different values per header type that the
                # header cache will hold
                "header-cache" : {
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 533
                    "Content-MD5" : 0,
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 534
                    "Date" : 0,
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 535
                    "If-Match" : 0,
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 536
                    "If-Modified-Since" : 0,
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 537
                    "If-None-Match" : 0,
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 538
                    "If-Range" : 0,
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 539
                    "If-Unmodified-Since" : 0,
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 540
                    "User-Agent" : 32,
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 532
                    "default" : 12
                },
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 500
                # Sets the list of headers for which illegal values will *not* cause warning logs to be emitted;
                # 
                # Adding a header name to this setting list disables the logging of warning messages in case an incoming　message
                # contains an HTTP header which cannot be　parsed into its high-level model class due to incompatible syntax.
                "ignore-illegal-header-for" : [],
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 494
                # Enables/disables the logging of warning messages in case an incoming
                # message (request or response) contains an HTTP header which cannot be
                # parsed into its high-level model class due to incompatible syntax.
                # Note that, independently of this settings, akka-http will accept messages
                # with such headers as long as the message as a whole would still be legal
                # under the HTTP specification even without this header.
                # If a header cannot be parsed into a high-level model instance it will be
                # provided as a `RawHeader`.
                # If logging is enabled it is performed with the configured
                # `error-logging-verbosity`.
                "illegal-header-warnings" : "on",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 527
                # Configures the processing mode when encountering illegal characters in
                # header value of response.
                # 
                # Supported mode:
                # `error`  : default mode, throw an ParsingException and terminate the processing
                # `warn`   : ignore the illegal characters in response header value and log a warning message
                # `ignore` : just ignore the illegal characters in response header value
                "illegal-response-header-value-processing-mode" : "error",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 444
                "max-chunk-ext-length" : 256,
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 445
                "max-chunk-size" : "1m",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 456
                # Default maximum content length which should not be exceeded by incoming request entities.
                # Can be changed at runtime (to a higher or lower value) via the `HttpEntity::withSizeLimit` method.
                # Note that it is not necessarily a problem to set this to a high value as all stream operations
                # are always properly backpressured.
                # Nevertheless you might want to apply some limit in order to prevent a single client from consuming
                # an excessive amount of server resources.
                # 
                # Set to `infinite` to completely disable entity length checks. (Even then you can still apply one
                # programmatically via `withSizeLimit`.)
                "max-content-length" : "8m",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 443
                "max-header-count" : 64,
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 441
                "max-header-name-length" : 64,
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 442
                "max-header-value-length" : "8k",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 439
                "max-method-length" : 16,
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 440
                "max-response-reason-length" : 64,
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 460
                # The maximum number of bytes to allow when reading the entire entity into memory with `toStrict`
                # (which is used by the `toStrictEntity` and `extractStrictEntity` directives)
                "max-to-strict-bytes" : "8m",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 438
                # The limits for the various parts of the HTTP message parser.
                "max-uri-length" : "2k",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 509
                # Parse headers into typed model classes in the Akka Http core layer.
                # 
                # If set to `off`, only essential headers will be parsed into their model classes. All other ones will be provided
                # as instances of `RawHeader`. Currently, `Connection`, `Host`, and `Expect` headers will still be provided in their
                # typed model. The full list of headers still provided as modeled instances can be found in the source code of
                # `akka.http.impl.engine.parsing.HttpHeaderParser.alwaysParsedHeaders`. Note that (regardless of this setting)
                # some headers like `Content-Type` are treated specially and will never be provided in the list of headers.
                "modeled-header-parsing" : "on",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 546
                # Enables/disables inclusion of an Tls-Session-Info header in parsed
                # messages over Tls transports (i.e., HttpRequest on server side and
                # HttpResponse on client side).
                "tls-session-info-header" : "off",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 470
                # Sets the strictness mode for parsing request target URIs.
                # The following values are defined:
                # 
                # `strict`: RFC3986-compliant URIs are required,
                #     a 400 response is triggered on violations
                # 
                # `relaxed`: all visible 7-Bit ASCII chars are allowed
                # 
                "uri-parsing-mode" : "strict"
            },
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http_2.12/jars/akka-http_2.12-10.1.11.jar!/reference.conf: 9
            "routing" : {
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http_2.12/jars/akka-http_2.12-10.1.11.jar!/reference.conf: 39
                # The maximum number of bytes per ByteString a decoding directive will produce
                # for an entity data stream.
                "decode-max-bytes-per-chunk" : "1m",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http_2.12/jars/akka-http_2.12-10.1.11.jar!/reference.conf: 48
                # Maximum content length after applying a decoding directive. When the directive
                # decompresses, for example, an entity compressed with gzip, the resulting stream can be much
                # larger than the max-content-length. Like with max-content-length, this is not necessarilly a
                # problem when consuming the entity in a streaming fashion, but does risk high memory use
                # when the entity is made strict or marshalled into an in-memory object.
                # This limit (like max-content-length) can be overridden on a case-by-case basis using the
                # withSizeLimit directive.
                "decode-max-size" : "8m",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http_2.12/jars/akka-http_2.12-10.1.11.jar!/reference.conf: 18
                # Enables/disables ETag and `If-Modified-Since` support for FileAndResourceDirectives
                "file-get-conditional" : "on",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http_2.12/jars/akka-http_2.12-10.1.11.jar!/reference.conf: 31
                # The maximum size between two requested ranges. Ranges with less space in between will be coalesced.
                # 
                # When multiple ranges are requested, a server may coalesce any of the ranges that overlap or that are separated
                # by a gap that is smaller than the overhead of sending multiple parts, regardless of the order in which the
                # corresponding byte-range-spec appeared in the received Range header field. Since the typical overhead between
                # parts of a multipart/byteranges payload is around 80 bytes, depending on the selected representation's
                # media type and the chosen boundary parameter length, it can be less efficient to transfer many small
                # disjoint parts than it is to transfer the entire selected representation.
                "range-coalescing-threshold" : 80,
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http_2.12/jars/akka-http_2.12-10.1.11.jar!/reference.conf: 35
                # The maximum number of allowed ranges per request.
                # Requests with more ranges will be rejected due to DOS suspicion.
                "range-count-limit" : 16,
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http_2.12/jars/akka-http_2.12-10.1.11.jar!/reference.conf: 21
                # Enables/disables the rendering of the "rendered by" footer in directory listings
                "render-vanity-footer" : "yes",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http_2.12/jars/akka-http_2.12-10.1.11.jar!/reference.conf: 15
                # Enables/disables the returning of more detailed error messages to the
                # client in the error response
                # Should be disabled for browser-facing APIs due to the risk of XSS attacks
                # and (probably) enabled for internal or non-browser APIs
                # (Note that akka-http will always produce log messages containing the full error details)
                "verbose-error-messages" : "off"
            },
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 14
            "server" : {
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 134
                # The requested maximum length of the queue of incoming connections.
                # If the server is busy and the backlog is full the OS will start dropping
                # SYN-packets and connection attempts may fail. Note, that the backlog
                # size is usually only a maximum size hint for the OS and the OS can
                # restrict the number further based on global limits.
                "backlog" : 100,
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 53
                # The time period within which the TCP binding process must be completed.
                "bind-timeout" : "1s",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 144
                # If this setting is empty the server only accepts requests that carry a
                # non-empty `Host` header. Otherwise it responds with `400 Bad Request`.
                # Set to a non-empty value to be used in lieu of a missing or empty `Host`
                # header to make the server accept such requests.
                # Note that the server will never accept HTTP/1.1 request without a `Host`
                # header, i.e. this setting only affects HTTP/1.1 requests with an empty
                # `Host` header as well as HTTP/1.0 requests.
                # Examples: `www.spray.io` or `example.com:8080`
                "default-host-header" : "",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 56
                # Default port to bind HTTP server to when no port was explicitly given.
                "default-http-port" : 80,
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 59
                # Default port to bind HTTPS server to when no port was explicitly given.
                "default-https-port" : 443,
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 190
                "http2" : {
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 213
                    # The number of request data bytes the HTTP/2 implementation is allowed to buffer internally per connection. Free
                    # space in this buffer is communicated to the peer using HTTP/2 flow-control messages to backpressure data if it
                    # isn't read fast enough.
                    # 
                    # When there is no backpressure, this amount will limit the amount of in-flight data. It might need to be increased
                    # for high bandwidth-delay-product connections.
                    # 
                    # There is a relation between the `incoming-connection-level-buffer-size` and the `incoming-stream-level-buffer-size`:
                    # If incoming-connection-level-buffer-size < incoming-stream-level-buffer-size * number_of_streams, then
                    # head-of-line blocking is possible between different streams on the same connection.
                    "incoming-connection-level-buffer-size" : "10 MB",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 221
                    # The number of request data bytes the HTTP/2 implementation is allowed to buffer internally per stream. Free space
                    # in this buffer is communicated to the peer using HTTP/2 flow-control messages to backpressure data if it isn't
                    # read fast enough.
                    # 
                    # When there is no backpressure, this amount will limit the amount of in-flight data per stream. It might need to
                    # be increased for high bandwidth-delay-product connections.
                    "incoming-stream-level-buffer-size" : "512kB",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 240
                    # Enable verbose debug logging for all ingoing and outgoing frames
                    "log-frames" : false,
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 192
                    # The maximum number of request per connection concurrently dispatched to the request handler.
                    "max-concurrent-streams" : 256,
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 237
                    # The maximum number of outgoing control frames to buffer when the peer does not read from its TCP connection before
                    # backpressuring incoming frames.
                    # 
                    # On a healthy HTTP/2 connection this setting should have little effect because control frames are given priority over
                    # data frames and should not be buffered for a long time.
                    # 
                    # The limit is necessary to prevent a malicious peer to solicit buffering of outgoing control frames (e.g. by sending PINGs)
                    # without ever reading frames ultimately leading to an out of memory situation. With the limit in place, the implementation
                    # stops reading incoming frames when the number of outgoing control frames has reached the given amount. This way an attacker
                    # isn't able to communicate any further without first freeing space in the TCP window, draining the buffered control frames.
                    # 
                    # See CVE-2019-9512 for an example of such an attack.
                    # 
                    # Note that only control frames are affected because data frames, in contrast, are covered by the HTTP/2 flow control.
                    "outgoing-control-frame-buffer-size" : 1024,
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 201
                    # The maximum number of bytes to receive from a request entity in a single chunk.
                    # 
                    # The reasoning to limit that amount (instead of delivering all buffered data for a stream) is that
                    # the amount of data in the internal buffers will drive backpressure and flow control on the HTTP/2 level. Bigger
                    # chunks would mean that the user-level entity reader will have to buffer all that data if it cannot read it in one
                    # go. The implementation would not be able to backpressure further data in that case because it does not know about
                    # this user-level buffer.
                    "request-entity-chunk-size" : "65536 b"
                },
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 34
                # The time after which an idle connection will be automatically closed.
                # Set to `infinite` to completely disable idle connection timeouts.
                "idle-timeout" : "60 s",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 72
                # The time period the HTTP server implementation will keep a connection open after
                # all data has been delivered to the network layer. This setting is similar to the SO_LINGER socket option
                # but does not only include the OS-level socket but also covers the Akka IO / Akka Streams network stack.
                # The setting is an extra precaution that prevents clients from keeping open a connection that is
                # already considered completed from the server side.
                # 
                # If the network level buffers (including the Akka Stream / Akka IO networking stack buffers)
                # contains more data than can be transferred to the client in the given time when the server-side considers
                # to be finished with this connection, the client may encounter a connection reset.
                # 
                # Set to 'infinite' to disable automatic connection closure (which will risk to leak connections).
                "linger-timeout" : "1 min",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 188
                # Enables/disables the logging of unencrypted HTTP traffic to and from the HTTP
                # server for debugging reasons.
                # 
                # Note: Use with care. Logging of unencrypted data traffic may expose secret data.
                # 
                # Incoming and outgoing traffic will be logged in hexdump format. To enable logging,
                # specify the number of bytes to log per chunk of data (the actual chunking depends
                # on implementation details and networking conditions and should be treated as
                # arbitrary).
                # 
                # For logging on the client side, see akka.http.client.log-unencrypted-network-bytes.
                # 
                # `off` : no log messages are produced
                # Int   : determines how many bytes should be logged per data chunk
                "log-unencrypted-network-bytes" : "off",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 86
                # The maximum number of concurrently accepted connections when using the
                # `Http().bindAndHandle` methods.
                # 
                # This setting doesn't apply to the `Http().bind` method which will still
                # deliver an unlimited backpressured stream of incoming connections.
                # 
                # Note, that this setting limits the number of the connections on a best-effort basis.
                # It does *not* strictly guarantee that the number of established TCP connections will never
                # exceed the limit (but it will be approximately correct) because connection termination happens
                # asynchronously. It also does *not* guarantee that the number of concurrently active handler
                # flow materializations will never exceed the limit for the reason that it is impossible to reliably
                # detect when a materialization has ended.
                "max-connections" : 1024,
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 170
                # Modify to tweak parsing settings on the server-side only.
                "parsing" : {},
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 98
                # The maximum number of requests that are accepted (and dispatched to
                # the application) on one single connection before the first request
                # has to be completed.
                # Incoming requests that would cause the pipelining limit to be exceeded
                # are not read from the connections socket so as to build up "back-pressure"
                # to the client via TCP flow control.
                # A setting of 1 disables HTTP pipelining, since only one request per
                # connection can be "open" (i.e. being processed by the application) at any
                # time. Set to higher values to enable HTTP pipelining.
                # This value must be > 0 and <= 1024.
                "pipelining-limit" : 16,
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 23
                # "PREVIEW" features that are not yet fully production ready.
                # These flags can change or be removed between patch releases.
                "preview" : {
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 29
                    # ONLY WORKS WITH `bindAndHandleAsync` (currently)
                    # 
                    # If this setting is enabled AND the akka-http2-support is found
                    # on the classpath the usual Http().bind... method calls will bind
                    # using HTTP/2. Please note that you must configure HTTPS while doing so.
                    "enable-http2" : "off"
                },
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 106
                # Enables/disables the addition of a `Raw-Request-URI` header holding the
                # original raw request URI as the client has sent it.
                "raw-request-uri-header" : "off",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 102
                # Enables/disables the addition of a `Remote-Address` header
                # holding the clients (remote) IP address.
                "remote-address-header" : "off",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 50
                # Defines the default time period within which the application has to
                # produce an HttpResponse for any given HttpRequest it received.
                # The timeout begins to run when the *end* of the request has been
                # received, so even potentially long uploads can have a short timeout.
                # Set to `infinite` to completely disable request timeout checking.
                # 
                # Make sure this timeout is smaller than the idle-timeout, otherwise,
                # the idle-timeout will kick in first and reset the TCP connection
                # without a response.
                # 
                # If this setting is not `infinite` the HTTP server layer attaches a
                # `Timeout-Access` header to the request, which enables programmatic
                # customization of the timeout period and timeout response for each
                # request individually.
                "request-timeout" : "20 s",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 127
                # The initial size of the buffer to render the response headers in.
                # Can be used for fine-tuning response rendering performance but probably
                # doesn't have to be fiddled with in most applications.
                "response-header-size-hint" : 512,
                # merge of reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 19,akka-http-version.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/akka-http-version.conf: 1
                "server-header" : "akka-http/10.1.11",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 148
                # Socket options to set for the listening socket. If a setting is left
                # undefined, it will use whatever the default on the system is.
                "socket-options" : {
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 149
                    "so-receive-buffer-size" : "undefined",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 151
                    "so-reuse-address" : "undefined",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 150
                    "so-send-buffer-size" : "undefined",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 152
                    "so-traffic-class" : "undefined",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 153
                    "tcp-keep-alive" : "undefined",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 155
                    "tcp-no-delay" : "undefined",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 154
                    "tcp-oob-inline" : "undefined"
                },
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 164
                # When graceful termination is enabled and used invoked with a deadline,
                # after the deadline passes pending requests will be replied to with a "terminating" http response,
                # instead of delivering those requests to the user-handler.
                # This response is configurable here using configuration, or via code in case more a sophisticated (e.g. with response entity)
                # response is needed.
                # 
                "termination-deadline-exceeded-response" : {
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 166
                    # Status code of the "terminating" response to be automatically sent to pending requests once the termination deadline is exceeded.
                    # ServiceUnavailable
                    "status" : 503
                },
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 114
                # Enables/disables automatic handling of HEAD requests.
                # If this setting is enabled the server dispatches HEAD requests as GET
                # requests to the application and automatically strips off all message
                # bodies from outgoing responses.
                # Note that, even when this setting is off the server will never send
                # out message bodies on responses to HEAD requests.
                "transparent-head-requests" : "on",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 122
                # Enables/disables the returning of more detailed error messages to
                # the client in the error response.
                # Should be disabled for browser-facing APIs due to the risk of XSS attacks
                # and (probably) enabled for internal or non-browser APIs.
                # Note that akka-http will always produce log messages containing the full
                # error details.
                "verbose-error-messages" : "off",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 243
                "websocket" : {
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 260
                    # Interval for sending periodic keep-alives
                    # The frame sent will be the one configured in akka.http.server.websocket.periodic-keep-alive-mode
                    # `infinite` by default, or a duration that is the max idle interval after which an keep-alive frame should be sent
                    # The value `infinite` means that *no* keep-alive heartbeat will be sent, as: "the allowed idle time is infinite"
                    "periodic-keep-alive-max-idle" : "infinite",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/reference.conf: 254
                    # periodic keep alive may be implemented using by sending Ping frames
                    # upon which the other side is expected to reply with a Pong frame,
                    # or by sending a Pong frame, which serves as unidirectional heartbeat.
                    # Valid values:
                    #   ping - default, for bi-directional ping/pong keep-alive heartbeating
                    #   pong - for uni-directional pong keep-alive heartbeating
                    # 
                    # It is also possible to provide a payload for each heartbeat message,
                    # this setting can be configured programatically by modifying the websocket settings.
                    # See: https://doc.akka.io/docs/akka-http/current/server-side/websocket-support.html
                    "periodic-keep-alive-mode" : "ping"
                }
            },
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http_2.12/jars/akka-http_2.12-10.1.11.jar!/reference.conf: 52
            # server-sent events
            "sse" : {
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http_2.12/jars/akka-http_2.12-10.1.11.jar!/reference.conf: 54
                # The maximum size for parsing server-sent events.
                "max-event-size" : 8192,
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http_2.12/jars/akka-http_2.12-10.1.11.jar!/reference.conf: 57
                # The maximum size for parsing lines of a server-sent event.
                "max-line-size" : 4096
            },
            # akka-http-version.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.11.jar!/akka-http-version.conf: 1
            "version" : "10.1.11"
        },
        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 828
        "io" : {
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1038
            "dns" : {
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1070
                "async-dns" : {
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1117
                    # How often to sweep out expired cache entries.
                    # Note that this interval has nothing to do with TTLs
                    "cache-cleanup-interval" : "120s",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1106
                    # Configures nameservers to query during DNS resolution.
                    # Defaults to the nameservers that would be used by the JVM by default.
                    # Set to a list of IPs to override the servers, e.g. [ "8.8.8.8", "8.8.4.4" ] for Google's servers
                    # If multiple are defined then they are tried in order until one responds
                    "nameservers" : "default",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1130
                    # Any hosts that have a number of dots less than this will not be looked up directly, instead, a search on
                    # the search domains will be tried first. This corresponds to the ndots option in /etc/resolv.conf, see
                    # https://linux.die.net/man/5/resolver for more info.
                    # Defaults to a system dependent lookup (on Unix like OSes, will attempt to parse /etc/resolv.conf, on
                    # other platforms, will default to 1).
                    "ndots" : "default",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1100
                    # Set how long the fact that a DNS record could not be found is
                    # cached. If a new resolution is done while the fact is cached it will
                    # be failed and not result in an actual DNS resolution. Default is
                    # to never cache.
                    # Possible values:
                    # never: never cache
                    # forever: cache a missing DNS record forever (you probably will not want to do this)
                    # n [time unit] = cache for this long
                    "negative-ttl" : "never",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1090
                    # Set upper bound for caching successfully resolved dns entries
                    # if the DNS record has a smaller TTL value than the setting that
                    # will be used. Default is to use the record TTL with no cap.
                    # Possible values:
                    # forever: always use the minimum TTL from the found records
                    # never: never cache
                    # n [time unit] = cap the caching to this value
                    "positive-ttl" : "forever",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1081
                    "provider-object" : "akka.io.dns.internal.AsyncDnsProvider",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1113
                    # The time that a request is allowed to live before being discarded
                    # given no reply. The lower bound of this should always be the amount
                    # of time to reasonably expect a DNS server to reply within.
                    # If multiple name servers are provided then each gets this long to response before trying
                    # the next one
                    "resolve-timeout" : "5s",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1123
                    # Configures the list of search domains.
                    # Defaults to a system dependent lookup (on Unix like OSes, will attempt to parse /etc/resolv.conf, on
                    # other platforms, will not make any attempt to lookup the search domains). Set to a single domain, or
                    # a list of domains, eg, [ "example.com", "example.net" ].
                    "search-domains" : "default"
                },
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1052
                # Fully qualified config path which holds the dispatcher configuration
                # for the manager and resolver router actors.
                # For actual router configuration see akka.actor.deployment./IO-DNS/*
                "dispatcher" : "akka.actor.internal-dispatcher",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1052
                # To-be-deprecated DNS resolver implementation which uses the Java InetAddress to resolve DNS records.
                # To be replaced by `akka.io.dns.async` which implements the DNS protocol natively and without blocking (which InetAddress does)
                "inet-address" : {
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1077
                    # How often to sweep out expired cache entries.
                    # Note that this interval has nothing to do with TTLs
                    "cache-cleanup-interval" : "120s",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1073
                    "negative-ttl" : "default",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1072
                    # To set the time to cache name resolutions
                    # Possible values:
                    # default: sun.net.InetAddressCachePolicy.get() and getNegative()
                    # forever: cache forever
                    # never: no caching
                    # n [time unit]: positive timeout with unit, for example 30s
                    "positive-ttl" : "default",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1064
                    # Must implement akka.io.DnsProvider
                    "provider-object" : "akka.io.InetAddressDnsProvider"
                },
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1058
                # Name of the subconfig at path akka.io.dns, see inet-address below
                # 
                # Change to `async-dns` to use the new "native" DNS resolver,
                # which is also capable of resolving SRV records.
                "resolver" : "inet-address"
            },
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 832
            # By default the select loops run on dedicated threads, hence using a
            # PinnedDispatcher
            "pinned-dispatcher" : {
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 844
                "executor" : "thread-pool-executor",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 845
                "thread-pool-executor" : {
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 845
                    "allow-core-timeout" : "off"
                },
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 843
                "type" : "PinnedDispatcher"
            },
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 838
            "tcp" : {
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 870
                # The maximum number of connection that are accepted in one go,
                # higher numbers decrease latency, lower numbers increase fairness on
                # the worker-dispatcher
                "batch-accept-limit" : 10,
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 878
                # The maximal number of direct buffers kept in the direct buffer pool for
                # reuse.
                "direct-buffer-pool-limit" : 1000,
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 874
                # The number of bytes per direct buffer in the pool used to read or write
                # network data from the kernel.
                "direct-buffer-size" : "128 KiB",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 911
                # Fully qualified config path which holds the dispatcher configuration
                # on which file IO tasks are scheduled
                "file-io-dispatcher" : "akka.actor.default-blocking-io-dispatcher",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 919
                # The maximum number of bytes (or "unlimited") to transfer in one batch
                # when using `WriteFile` command which uses `FileChannel.transferTo` to
                # pipe files to a TCP socket. On some OS like Linux `FileChannel.transferTo`
                # may block for a long time when network IO is faster than file IO.
                # Decreasing the value may improve fairness while increasing may improve
                # throughput.
                "file-io-transferTo-limit" : "512 KiB",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 924
                # The number of times to retry the `finishConnect` call after being notified about
                # OP_CONNECT. Retries are needed if the OP_CONNECT notification doesn't imply that
                # `finishConnect` will succeed, which is the case on Android.
                "finish-connect-retries" : 5,
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 907
                # Fully qualified config path which holds the dispatcher configuration
                # for the selector management actors
                "management-dispatcher" : "akka.actor.internal-dispatcher",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 860
                # Maximum number of open channels supported by this TCP module; there is
                # no intrinsic general limit, this setting is meant to enable DoS
                # protection by limiting the number of concurrently connected clients.
                # Also note that this is a "soft" limit; in certain cases the implementation
                # will accept a few connections more or a few less than the number configured
                # here. Must be an integer > 0 or "unlimited".
                "max-channels" : 256000,
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 890
                # The maximum number of bytes delivered by a `Received` message. Before
                # more data is read from the network the connection actor will try to
                # do other work.
                # The purpose of this setting is to impose a smaller limit than the
                # configured receive buffer size. When using value 'unlimited' it will
                # try to read all from the receive buffer.
                "max-received-message-size" : "unlimited",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 852
                # The number of selectors to stripe the served channels over; each of
                # these will use one select loop on the selector-dispatcher.
                "nr-of-selectors" : 1,
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 882
                # The duration a connection actor waits for a `Register` message from
                # its commander before aborting the connection.
                "register-timeout" : "5s",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 865
                # When trying to assign a new connection to a selector and the chosen
                # selector is at full capacity, retry selector choosing and assignment
                # this many times before giving up
                "selector-association-retries" : 10,
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 899
                # Fully qualified config path which holds the dispatcher configuration
                # to be used for running the select() calls in the selectors
                "selector-dispatcher" : "akka.io.pinned-dispatcher",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 895
                # Enable fine grained logging of what goes on inside the implementation.
                # Be aware that this may log more than once per message sent to the actors
                # of the tcp implementation.
                "trace-logging" : "off",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 933
                # On Windows connection aborts are not reliably detected unless an OP_READ is
                # registered on the selector _after_ the connection has been reset. This
                # workaround enables an OP_CONNECT which forces the abort to be visible on Windows.
                # Enabling this setting on other platforms than Windows will cause various failures
                # and undefined behavior.
                # Possible values of this key are on, off and auto where auto will enable the
                # workaround if Windows is detected automatically.
                "windows-connection-abort-workaround-enabled" : "off",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 903
                # Fully qualified config path which holds the dispatcher configuration
                # for the read/write worker actors
                "worker-dispatcher" : "akka.actor.internal-dispatcher"
            },
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 926
            "udp" : {
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 972
                # The maximal number of direct buffers kept in the direct buffer pool for
                # reuse.
                "direct-buffer-pool-limit" : 1000,
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 968
                # The number of bytes per direct buffer in the pool used to read or write
                # network data from the kernel.
                "direct-buffer-size" : "128 KiB",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 989
                # Fully qualified config path which holds the dispatcher configuration
                # for the selector management actors
                "management-dispatcher" : "akka.actor.internal-dispatcher",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 945
                # Maximum number of open channels supported by this UDP module Generally
                # UDP does not require a large number of channels, therefore it is
                # recommended to keep this setting low.
                "max-channels" : 4096,
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 940
                # The number of selectors to stripe the served channels over; each of
                # these will use one select loop on the selector-dispatcher.
                "nr-of-selectors" : 1,
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 964
                # The maximum number of datagrams that are read in one go,
                # higher numbers decrease latency, lower numbers increase fairness on
                # the worker-dispatcher
                "receive-throughput" : 3,
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 954
                # The select loop can be used in two modes:
                # - setting "infinite" will select without a timeout, hogging a thread
                # - setting a positive timeout will do a bounded select call,
                #   enabling sharing of a single thread between multiple selectors
                #   (in this case you will have to use a different configuration for the
                #   selector-dispatcher, e.g. using "type=Dispatcher" with size 1)
                # - setting it to zero means polling, i.e. calling selectNow()
                "select-timeout" : "infinite",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 959
                # When trying to assign a new connection to a selector and the chosen
                # selector is at full capacity, retry selector choosing and assignment
                # this many times before giving up
                "selector-association-retries" : 10,
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 981
                # Fully qualified config path which holds the dispatcher configuration
                # to be used for running the select() calls in the selectors
                "selector-dispatcher" : "akka.io.pinned-dispatcher",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 977
                # Enable fine grained logging of what goes on inside the implementation.
                # Be aware that this may log more than once per message sent to the actors
                # of the tcp implementation.
                "trace-logging" : "off",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 985
                # Fully qualified config path which holds the dispatcher configuration
                # for the read/write worker actors
                "worker-dispatcher" : "akka.actor.internal-dispatcher"
            },
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 982
            "udp-connected" : {
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1028
                # The maximal number of direct buffers kept in the direct buffer pool for
                # reuse.
                "direct-buffer-pool-limit" : 1000,
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1024
                # The number of bytes per direct buffer in the pool used to read or write
                # network data from the kernel.
                "direct-buffer-size" : "128 KiB",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1045
                # Fully qualified config path which holds the dispatcher configuration
                # for the selector management actors
                "management-dispatcher" : "akka.actor.internal-dispatcher",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1001
                # Maximum number of open channels supported by this UDP module Generally
                # UDP does not require a large number of channels, therefore it is
                # recommended to keep this setting low.
                "max-channels" : 4096,
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 996
                # The number of selectors to stripe the served channels over; each of
                # these will use one select loop on the selector-dispatcher.
                "nr-of-selectors" : 1,
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1020
                # The maximum number of datagrams that are read in one go,
                # higher numbers decrease latency, lower numbers increase fairness on
                # the worker-dispatcher
                "receive-throughput" : 3,
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1010
                # The select loop can be used in two modes:
                # - setting "infinite" will select without a timeout, hogging a thread
                # - setting a positive timeout will do a bounded select call,
                #   enabling sharing of a single thread between multiple selectors
                #   (in this case you will have to use a different configuration for the
                #   selector-dispatcher, e.g. using "type=Dispatcher" with size 1)
                # - setting it to zero means polling, i.e. calling selectNow()
                "select-timeout" : "infinite",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1015
                # When trying to assign a new connection to a selector and the chosen
                # selector is at full capacity, retry selector choosing and assignment
                # this many times before giving up
                "selector-association-retries" : 10,
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1037
                # Fully qualified config path which holds the dispatcher configuration
                # to be used for running the select() calls in the selectors
                "selector-dispatcher" : "akka.io.pinned-dispatcher",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1033
                # Enable fine grained logging of what goes on inside the implementation.
                # Be aware that this may log more than once per message sent to the actors
                # of the tcp implementation.
                "trace-logging" : "off",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 1041
                # Fully qualified config path which holds the dispatcher configuration
                # for the read/write worker actors
                "worker-dispatcher" : "akka.actor.internal-dispatcher"
            }
        },
        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 87
        # JVM shutdown, System.exit(-1), in case of a fatal error,
        # such as OutOfMemoryError
        "jvm-exit-on-fatal-error" : "on",
        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 95
        # Akka installs JVM shutdown hooks by default, e.g. in CoordinatedShutdown and Artery. This property will
        # not disable user-provided hooks registered using `CoordinatedShutdown#addCancellableJvmShutdownHook`.
        # This property is related to `akka.coordinated-shutdown.run-by-jvm-shutdown-hook` below.
        # This property makes it possible to disable all such hooks if the application itself
        # or a higher level framework such as Play prefers to install the JVM shutdown hook and
        # terminate the ActorSystem itself, with or without using CoordinatedShutdown.
        "jvm-shutdown-hooks" : "on",
        # merge of reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-stream_2.12/jars/akka-stream_2.12-2.6.1.jar!/reference.conf: 6,reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 75
        # eager creation of the system wide materializer
        "library-extensions" : [
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-stream_2.12/jars/akka-stream_2.12-2.6.1.jar!/reference.conf: 6
            #  eager creation of the system wide materializer
            "akka.stream.SystemMaterializer",
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 75
            "akka.serialization.SerializationExtension"
        ],
        # application.conf @ file:/F:/EducationSystemManagement/service/target/scala-2.12/classes/application.conf: 18
        "log-config-on-start" : "on",
        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 55
        # Log at info level when messages are sent to dead letters.
        # Possible values:
        # on: all dead letters are logged
        # off: no logging of dead letters
        # n: positive integer, number of dead letters that will be logged
        "log-dead-letters" : 10,
        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 60
        # Possibility to turn off logging of dead letters while the actor system
        # is shutting down. Logging is only done when enabled by 'log-dead-letters'
        # setting.
        "log-dead-letters-during-shutdown" : "off",
        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 65
        # When log-dead-letters is enabled, this will re-enable the logging after configured duration.
        # infinite: suspend the logging forever;
        # or a duration (eg: 5 minutes), after which the logging will be re-enabled.
        "log-dead-letters-suspend-duration" : "5 minutes",
        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 34
        # Loggers are created and registered synchronously during ActorSystem
        # start-up, and since they are actors, this timeout is used to bound the
        # waiting time
        "logger-startup-timeout" : "5s",
        # application.conf @ file:/F:/EducationSystemManagement/service/target/scala-2.12/classes/application.conf: 16
        "loggers" : [
            # application.conf @ file:/F:/EducationSystemManagement/service/target/scala-2.12/classes/application.conf: 16
            "akka.event.slf4j.Slf4jLogger"
        ],
        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 29
        # Specifies the default loggers dispatcher
        "loggers-dispatcher" : "akka.actor.default-dispatcher",
        # application.conf @ file:/F:/EducationSystemManagement/service/target/scala-2.12/classes/application.conf: 17
        "logging-filter" : "akka.event.slf4j.Slf4jLoggingFilter",
        # application.conf @ file:/F:/EducationSystemManagement/service/target/scala-2.12/classes/application.conf: 19
        "loglevel" : "INFO",
        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 793
        # Used to set the behavior of the scheduler.
        # Changing the default values may change the system behavior drastically so make
        # sure you know what you're doing! See the Scheduler section of the Akka
        # Documentation for more details.
        "scheduler" : {
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 829
            # This setting selects the timer implementation which shall be loaded at
            # system start-up.
            # The class given here must implement the akka.actor.Scheduler interface
            # and offer a public constructor which takes three arguments:
            #  1) com.typesafe.config.Config
            #  2) akka.event.LoggingAdapter
            #  3) java.util.concurrent.ThreadFactory
            "implementation" : "akka.actor.LightArrayRevolverScheduler",
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 835
            # When shutting down the scheduler, there will typically be a thread which
            # needs to be stopped, and this timeout determines how long to wait for
            # that to happen. In case of timeout the shutdown of the actor system will
            # proceed without running possibly still enqueued tasks.
            "shutdown-timeout" : "5s",
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 813
            # The LightArrayRevolverScheduler is used as the default scheduler in the
            # system. It does not execute the scheduled tasks on exact time, but on every
            # tick, it will run everything that is (over)due. You can increase or decrease
            # the accuracy of the execution timing by specifying smaller or larger tick
            # duration. If you are scheduling a lot of tasks you should consider increasing
            # the ticks per wheel.
            # Note that it might take up to 1 tick to stop the Timer, so setting the
            # tick-duration to a high value will make shutting down the actor system
            # take longer.
            "tick-duration" : "10ms",
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 820
            # The timer uses a circular wheel of buckets to store the timer tasks.
            # This should be set such that the majority of scheduled timeouts (for high
            # scheduling frequency) will be shorter than one rotation of the wheel
            # (ticks-per-wheel * ticks-duration)
            # THIS MUST BE A POWER OF TWO!
            "ticks-per-wheel" : 512
        },
        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 774
        "serialization" : {
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 774
            "protobuf" : {
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 780
                # Additional classes that are allowed even if they are not defined in `serialization-bindings`.
                # It can be exact class name or name of super class or interfaces (one level).
                # This is useful when a class is not used for serialization any more and therefore removed
                # from `serialization-bindings`, but should still be possible to deserialize.
                "whitelist-class" : [
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 791
                    "com.google.protobuf.GeneratedMessage",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 792
                    "com.google.protobuf.GeneratedMessageV3",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 793
                    "scalapb.GeneratedMessageCompanion",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 794
                    "akka.protobuf.GeneratedMessage",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 795
                    "akka.protobufv3.internal.GeneratedMessageV3"
                ]
            }
        },
        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-stream_2.12/jars/akka-stream_2.12-2.6.1.jar!/reference.conf: 141
        # configure overrides to ssl-configuration here (to be used by akka-streams, and akka-http – i.e. when serving https connections)
        "ssl-config" : {
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-stream_2.12/jars/akka-stream_2.12-2.6.1.jar!/reference.conf: 142
            "protocol" : "TLSv1.2"
        },
        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/reference.conf: 44
        # Log level for the very basic logger activated during ActorSystem startup.
        # This logger prints the log messages to stdout (System.out).
        # Options: OFF, ERROR, WARNING, INFO, DEBUG
        "stdout-loglevel" : "WARNING",
        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-stream_2.12/jars/akka-stream_2.12-2.6.1.jar!/reference.conf: 8
        "stream" : {
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-stream_2.12/jars/akka-stream_2.12-2.6.1.jar!/reference.conf: 133
            # Deprecated, left here to not break Akka HTTP which refers to it
            "blocking-io-dispatcher" : "akka.actor.default-blocking-io-dispatcher",
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-stream_2.12/jars/akka-stream_2.12-2.6.1.jar!/reference.conf: 137
            # Deprecated, will not be used unless user code refer to it, use 'akka.stream.materializer.blocking-io-dispatcher'
            # instead, or if from code, prefer the 'ActorAttributes.IODispatcher' attribute
            "default-blocking-io-dispatcher" : "akka.actor.default-blocking-io-dispatcher",
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-stream_2.12/jars/akka-stream_2.12-2.6.1.jar!/reference.conf: 11
            # Default materializer settings
            "materializer" : {
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-stream_2.12/jars/akka-stream_2.12-2.6.1.jar!/reference.conf: 54
                # Enable automatic fusing of all graphs that are run. For short-lived streams
                # this may cause an initial runtime overhead, but most of the time fusing is
                # desirable since it reduces the number of Actors that are created.
                # Deprecated, since Akka 2.5.0, setting does not have any effect.
                "auto-fusing" : "on",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-stream_2.12/jars/akka-stream_2.12-2.6.1.jar!/reference.conf: 25
                # Fully qualified config path which holds the dispatcher configuration
                # or full dispatcher configuration to be used by stream operators that
                # perform blocking operations
                "blocking-io-dispatcher" : "akka.actor.default-blocking-io-dispatcher",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-stream_2.12/jars/akka-stream_2.12-2.6.1.jar!/reference.conf: 93
                # Time to wait for async materializer creation before throwing an exception
                "creation-timeout" : "20 seconds",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-stream_2.12/jars/akka-stream_2.12-2.6.1.jar!/reference.conf: 71
                "debug" : {
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-stream_2.12/jars/akka-stream_2.12-2.6.1.jar!/reference.conf: 79
                    # Enables the fuzzing mode which increases the chance of race conditions
                    # by aggressively reordering events and making certain operations more
                    # concurrent than usual.
                    # This setting is for testing purposes, NEVER enable this in a production
                    # environment!
                    # To get the best results, try combining this setting with a throughput
                    # of 1 on the corresponding dispatchers.
                    "fuzzing-mode" : "off"
                },
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-stream_2.12/jars/akka-stream_2.12-2.6.1.jar!/reference.conf: 45
                # Enable additional troubleshooting logging at DEBUG log level
                "debug-logging" : "off",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-stream_2.12/jars/akka-stream_2.12-2.6.1.jar!/reference.conf: 20
                # Fully qualified config path which holds the dispatcher configuration
                # or full dispatcher configuration to be used by ActorMaterializer when creating Actors.
                "dispatcher" : "akka.actor.default-dispatcher",
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-stream_2.12/jars/akka-stream_2.12-2.6.1.jar!/reference.conf: 14
                # Initial size of buffers used in stream elements
                "initial-input-buffer-size" : 4,
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-stream_2.12/jars/akka-stream_2.12-2.6.1.jar!/reference.conf: 82
                "io" : {
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-stream_2.12/jars/akka-stream_2.12-2.6.1.jar!/reference.conf: 82
                    "tcp" : {
                        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-stream_2.12/jars/akka-stream_2.12-2.6.1.jar!/reference.conf: 89
                        # The outgoing bytes are accumulated in a buffer while waiting for acknoledgment
                        # of pending write. This improves throughput for small messages (frames) without
                        # sacrificing latency. While waiting for the ack the stage will eagerly pull
                        # from upstream until the buffer exceeds this size. That means that the buffer may hold
                        # slightly more bytes than this limit (at most one element more). It can be set to 0
                        # to disable the usage of the buffer.
                        "write-buffer-size" : "16 KiB"
                    }
                },
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-stream_2.12/jars/akka-stream_2.12-2.6.1.jar!/reference.conf: 64
                # Those stream elements which have explicit buffers (like mapAsync, mapAsyncUnordered,
                # buffer, flatMapMerge, Source.actorRef, Source.queue, etc.) will preallocate a fixed
                # buffer upon stream materialization if the requested buffer size is less than this
                # configuration parameter. The default is very high because failing early is better
                # than failing under load.
                # 
                # Buffers sized larger than this will dynamically grow/shrink and consume more memory
                # per element than the fixed size buffers.
                "max-fixed-buffer-size" : 1000000000,
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-stream_2.12/jars/akka-stream_2.12-2.6.1.jar!/reference.conf: 16
                # Maximum size of buffers used in stream elements
                "max-input-buffer-size" : 16,
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-stream_2.12/jars/akka-stream_2.12-2.6.1.jar!/reference.conf: 48
                # Maximum number of elements emitted in batch if downstream signals large demand
                "output-burst-limit" : 1000,
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-stream_2.12/jars/akka-stream_2.12-2.6.1.jar!/reference.conf: 97
                # #stream-ref
                # configure defaults for SourceRef and SinkRef
                "stream-ref" : {
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-stream_2.12/jars/akka-stream_2.12-2.6.1.jar!/reference.conf: 102
                    # Buffer of a SinkRef that is used to batch Request elements from the other side of the stream ref
                    # 
                    # The buffer will be attempted to be filled eagerly even while the local stage did not request elements,
                    # because the delay of requesting over network boundaries is much higher.
                    "buffer-capacity" : 32,
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-stream_2.12/jars/akka-stream_2.12-2.6.1.jar!/reference.conf: 112
                    # Demand is signalled by sending a cumulative demand message ("requesting messages until the n-th sequence number)
                    # Using a cumulative demand model allows us to re-deliver the demand message in case of message loss (which should
                    # be very rare in any case, yet possible -- mostly under connection break-down and re-establishment).
                    # 
                    # The semantics of handling and updating the demand however are in-line with what Reactive Streams dictates.
                    # 
                    # In normal operation, demand is signalled in response to arriving elements, however if no new elements arrive
                    # within `demand-redelivery-interval` a re-delivery of the demand will be triggered, assuming that it may have gotten lost.
                    "demand-redelivery-interval" : "1 second",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-stream_2.12/jars/akka-stream_2.12-2.6.1.jar!/reference.conf: 127
                    # In order to guard the receiving end of a stream ref from never terminating (since awaiting a Completion or Failed
                    # message) after / before a Terminated is seen, a special timeout is applied once Terminated is received by it.
                    # This allows us to terminate stream refs that have been targeted to other nodes which are Downed, and as such the
                    # other side of the stream ref would never send the "final" terminal message.
                    # 
                    # The timeout specifically means the time between the Terminated signal being received and when the local SourceRef
                    # determines to fail itself, assuming there was message loss or a complete partition of the completion signal.
                    "final-termination-signal-deadline" : "2 seconds",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-stream_2.12/jars/akka-stream_2.12-2.6.1.jar!/reference.conf: 118
                    # Subscription timeout, during which the "remote side" MUST subscribe (materialize) the handed out stream ref.
                    # This timeout does not have to be very low in normal situations, since the remote side may also need to
                    # prepare things before it is ready to materialize the reference. However the timeout is needed to avoid leaking
                    # in-active streams which are never subscribed to.
                    "subscription-timeout" : "30 seconds"
                },
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-stream_2.12/jars/akka-stream_2.12-2.6.1.jar!/reference.conf: 29
                # Cleanup leaked publishers and subscribers when they are not used within a given
                # deadline
                "subscription-timeout" : {
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-stream_2.12/jars/akka-stream_2.12-2.6.1.jar!/reference.conf: 37
                    # when the subscription timeout is reached one of the following strategies on
                    # the "stale" publisher:
                    # cancel - cancel it (via `onError` or subscribing to the publisher and
                    #          `cancel()`ing the subscription right away
                    # warn   - log a warning statement about the stale element (then drop the
                    #          reference to it)
                    # noop   - do nothing (not recommended)
                    "mode" : "cancel",
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-stream_2.12/jars/akka-stream_2.12-2.6.1.jar!/reference.conf: 41
                    # time after which a subscriber / publisher is considered stale and eligible
                    # for cancelation (see `akka.stream.subscription-timeout.mode`)
                    "timeout" : "5s"
                },
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-stream_2.12/jars/akka-stream_2.12-2.6.1.jar!/reference.conf: 69
                # Maximum number of sync messages that actor can process for stream to substream communication.
                # Parameter allows to interrupt synchronous processing to get upstream/downstream messages.
                # Allows to accelerate message processing that happening within same actor but keep system responsive.
                "sync-processing-limit" : 1000
            }
        },
        # version.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.6.1.jar!/version.conf: 1
        "version" : "2.6.1"
    },
    # system properties
    "awt" : {
        # system properties
        "toolkit" : "sun.awt.windows.WToolkit"
    },
    # merge of application.conf @ file:/F:/EducationSystemManagement/service/target/scala-2.12/classes/application.conf: 1,application.conf @ file:/F:/EducationSystemManagement/company%20management/target/scala-2.12/classes/application.conf: 1
    "education-management-system" : {
        # application.conf @ file:/F:/EducationSystemManagement/service/target/scala-2.12/classes/application.conf: 8
        "client" : {
            # application.conf @ file:/F:/EducationSystemManagement/service/target/scala-2.12/classes/application.conf: 9
            "host" : "localhost",
            # application.conf @ file:/F:/EducationSystemManagement/service/target/scala-2.12/classes/application.conf: 11
            "port" : 4200
        },
        # application.conf @ file:/F:/EducationSystemManagement/company%20management/target/scala-2.12/classes/application.conf: 2
        "db" : {
            # application.conf @ file:/F:/EducationSystemManagement/company%20management/target/scala-2.12/classes/application.conf: 11
            "connectTimeout" : "10",
            # application.conf @ file:/F:/EducationSystemManagement/company%20management/target/scala-2.12/classes/application.conf: 5
            "driver" : "com.mysql.cj.jdbc.Driver",
            # application.conf @ file:/F:/EducationSystemManagement/company%20management/target/scala-2.12/classes/application.conf: 9
            "password" : "SriShree@12345",
            # application.conf @ file:/F:/EducationSystemManagement/company%20management/target/scala-2.12/classes/application.conf: 13
            "poolSize" : 32,
            # application.conf @ file:/F:/EducationSystemManagement/company%20management/target/scala-2.12/classes/application.conf: 3
            "url" : "jdbc:mysql://localhost:3306/educationmanagementsystem",
            # application.conf @ file:/F:/EducationSystemManagement/company%20management/target/scala-2.12/classes/application.conf: 7
            "username" : "root"
        },
        # application.conf @ file:/F:/EducationSystemManagement/service/target/scala-2.12/classes/application.conf: 2
        "http" : {
            # application.conf @ file:/F:/EducationSystemManagement/service/target/scala-2.12/classes/application.conf: 3
            "host" : "localhost",
            # application.conf @ file:/F:/EducationSystemManagement/service/target/scala-2.12/classes/application.conf: 5
            "port" : 8080
        }
    },
    # system properties
    "file" : {
        # system properties
        "encoding" : {
            # system properties
            "pkg" : "sun.io"
        },
        # system properties
        "separator" : "\\"
    },
    # system properties
    "java" : {
        # system properties
        "awt" : {
            # system properties
            "graphicsenv" : "sun.awt.Win32GraphicsEnvironment",
            # system properties
            "printerjob" : "sun.awt.windows.WPrinterJob"
        },
        # system properties
        "class" : {
            # system properties
            "path" : "C:\\Program Files\\Java\\jdk1.8.0_211\\jre\\lib\\charsets.jar;C:\\Program Files\\Java\\jdk1.8.0_211\\jre\\lib\\deploy.jar;C:\\Program Files\\Java\\jdk1.8.0_211\\jre\\lib\\ext\\access-bridge-64.jar;C:\\Program Files\\Java\\jdk1.8.0_211\\jre\\lib\\ext\\cldrdata.jar;C:\\Program Files\\Java\\jdk1.8.0_211\\jre\\lib\\ext\\dnsns.jar;C:\\Program Files\\Java\\jdk1.8.0_211\\jre\\lib\\ext\\jaccess.jar;C:\\Program Files\\Java\\jdk1.8.0_211\\jre\\lib\\ext\\jfxrt.jar;C:\\Program Files\\Java\\jdk1.8.0_211\\jre\\lib\\ext\\localedata.jar;C:\\Program Files\\Java\\jdk1.8.0_211\\jre\\lib\\ext\\nashorn.jar;C:\\Program Files\\Java\\jdk1.8.0_211\\jre\\lib\\ext\\sunec.jar;C:\\Program Files\\Java\\jdk1.8.0_211\\jre\\lib\\ext\\sunjce_provider.jar;C:\\Program Files\\Java\\jdk1.8.0_211\\jre\\lib\\ext\\sunmscapi.jar;C:\\Program Files\\Java\\jdk1.8.0_211\\jre\\lib\\ext\\sunpkcs11.jar;C:\\Program Files\\Java\\jdk1.8.0_211\\jre\\lib\\ext\\zipfs.jar;C:\\Program Files\\Java\\jdk1.8.0_211\\jre\\lib\\javaws.jar;C:\\Program Files\\Java\\jdk1.8.0_211\\jre\\lib\\jce.jar;C:\\Program Files\\Java\\jdk1.8.0_211\\jre\\lib\\jfr.jar;C:\\Program Files\\Java\\jdk1.8.0_211\\jre\\lib\\jfxswt.jar;C:\\Program Files\\Java\\jdk1.8.0_211\\jre\\lib\\jsse.jar;C:\\Program Files\\Java\\jdk1.8.0_211\\jre\\lib\\management-agent.jar;C:\\Program Files\\Java\\jdk1.8.0_211\\jre\\lib\\plugin.jar;C:\\Program Files\\Java\\jdk1.8.0_211\\jre\\lib\\resources.jar;C:\\Program Files\\Java\\jdk1.8.0_211\\jre\\lib\\rt.jar;F:\\EducationSystemManagement\\service\\target\\scala-2.12\\classes;F:\\EducationSystemManagement\\company management\\target\\scala-2.12\\classes;F:\\EducationSystemManagement\\user management\\target\\scala-2.12\\classes;C:\\Users\\Srikanth\\.ivy2\\cache\\ch.qos.logback\\logback-classic\\jars\\logback-classic-1.2.3.jar;C:\\Users\\Srikanth\\.ivy2\\cache\\ch.qos.logback\\logback-core\\jars\\logback-core-1.2.3.jar;C:\\Users\\Srikanth\\.ivy2\\cache\\co.fs2\\fs2-core_2.12\\jars\\fs2-core_2.12-2.1.0.jar;C:\\Users\\Srikanth\\.ivy2\\cache\\com.chuusai\\shapeless_2.12\\bundles\\shapeless_2.12-2.3.3.jar;C:\\Users\\Srikanth\\.ivy2\\cache\\com.github.pureconfig\\pureconfig-core_2.12\\bundles\\pureconfig-core_2.12-0.12.1.jar;C:\\Users\\Srikanth\\.ivy2\\cache\\com.github.pureconfig\\pureconfig-generic_2.12\\bundles\\pureconfig-generic_2.12-0.12.1.jar;C:\\Users\\Srikanth\\.ivy2\\cache\\com.github.pureconfig\\pureconfig-macros_2.12\\jars\\pureconfig-macros_2.12-0.12.1.jar;C:\\Users\\Srikanth\\.ivy2\\cache\\com.github.pureconfig\\pureconfig_2.12\\jars\\pureconfig_2.12-0.12.1.jar;C:\\Users\\Srikanth\\.ivy2\\cache\\com.google.protobuf\\protobuf-java\\bundles\\protobuf-java-3.10.0.jar;C:\\Users\\Srikanth\\.ivy2\\cache\\com.lihaoyi\\sourcecode_2.12\\jars\\sourcecode_2.12-0.1.8.jar;C:\\Users\\Srikanth\\.ivy2\\cache\\com.typesafe\\config\\bundles\\config-1.4.0.jar;C:\\Users\\Srikanth\\.ivy2\\cache\\com.typesafe\\ssl-config-core_2.12\\bundles\\ssl-config-core_2.12-0.4.1.jar;C:\\Users\\Srikanth\\.ivy2\\cache\\com.typesafe.akka\\akka-actor_2.12\\jars\\akka-actor_2.12-2.6.1.jar;C:\\Users\\Srikanth\\.ivy2\\cache\\com.typesafe.akka\\akka-http-core_2.12\\jars\\akka-http-core_2.12-10.1.11.jar;C:\\Users\\Srikanth\\.ivy2\\cache\\com.typesafe.akka\\akka-http-spray-json_2.12\\jars\\akka-http-spray-json_2.12-10.1.11.jar;C:\\Users\\Srikanth\\.ivy2\\cache\\com.typesafe.akka\\akka-http_2.12\\jars\\akka-http_2.12-10.1.11.jar;C:\\Users\\Srikanth\\.ivy2\\cache\\com.typesafe.akka\\akka-parsing_2.12\\jars\\akka-parsing_2.12-10.1.11.jar;C:\\Users\\Srikanth\\.ivy2\\cache\\com.typesafe.akka\\akka-protobuf-v3_2.12\\jars\\akka-protobuf-v3_2.12-2.6.1.jar;C:\\Users\\Srikanth\\.ivy2\\cache\\com.typesafe.akka\\akka-slf4j_2.12\\jars\\akka-slf4j_2.12-2.6.1.jar;C:\\Users\\Srikanth\\.ivy2\\cache\\com.typesafe.akka\\akka-stream_2.12\\jars\\akka-stream_2.12-2.6.1.jar;C:\\Users\\Srikanth\\.ivy2\\cache\\com.zaxxer\\HikariCP\\bundles\\HikariCP-3.4.1.jar;C:\\Users\\Srikanth\\.ivy2\\cache\\io.spray\\spray-json_2.12\\jars\\spray-json_2.12-1.3.5.jar;C:\\Users\\Srikanth\\.ivy2\\cache\\mysql\\mysql-connector-java\\jars\\mysql-connector-java-8.0.15.jar;C:\\Users\\Srikanth\\.ivy2\\cache\\org.reactivestreams\\reactive-streams\\jars\\reactive-streams-1.0.3.jar;C:\\Users\\Srikanth\\.sbt\\boot\\scala-2.12.7\\lib\\scala-library.jar;C:\\Users\\Srikanth\\.sbt\\boot\\scala-2.12.7\\lib\\scala-reflect.jar;C:\\Users\\Srikanth\\.ivy2\\cache\\org.scala-lang.modules\\scala-collection-compat_2.12\\bundles\\scala-collection-compat_2.12-2.1.2.jar;C:\\Users\\Srikanth\\.ivy2\\cache\\org.scala-lang.modules\\scala-java8-compat_2.12\\bundles\\scala-java8-compat_2.12-0.8.0.jar;C:\\Users\\Srikanth\\.ivy2\\cache\\org.scala-lang.modules\\scala-parser-combinators_2.12\\bundles\\scala-parser-combinators_2.12-1.1.2.jar;C:\\Users\\Srikanth\\.ivy2\\cache\\org.scodec\\scodec-bits_2.12\\jars\\scodec-bits_2.12-1.1.12.jar;C:\\Users\\Srikanth\\.ivy2\\cache\\org.slf4j\\slf4j-api\\jars\\slf4j-api-1.7.29.jar;C:\\Users\\Srikanth\\.ivy2\\cache\\org.tpolecat\\doobie-core_2.12\\jars\\doobie-core_2.12-0.8.6.jar;C:\\Users\\Srikanth\\.ivy2\\cache\\org.tpolecat\\doobie-free_2.12\\jars\\doobie-free_2.12-0.8.6.jar;C:\\Users\\Srikanth\\.ivy2\\cache\\org.tpolecat\\doobie-hikari_2.12\\jars\\doobie-hikari_2.12-0.8.6.jar;C:\\Users\\Srikanth\\.ivy2\\cache\\org.typelevel\\cats-core_2.12\\jars\\cats-core_2.12-2.0.0.jar;C:\\Users\\Srikanth\\.ivy2\\cache\\org.typelevel\\cats-effect_2.12\\jars\\cats-effect_2.12-2.0.0.jar;C:\\Users\\Srikanth\\.ivy2\\cache\\org.typelevel\\cats-free_2.12\\jars\\cats-free_2.12-2.0.0.jar;C:\\Users\\Srikanth\\.ivy2\\cache\\org.typelevel\\cats-kernel_2.12\\jars\\cats-kernel_2.12-2.0.0.jar;C:\\Users\\Srikanth\\.ivy2\\cache\\org.typelevel\\cats-macros_2.12\\jars\\cats-macros_2.12-2.0.0.jar;C:\\Users\\Srikanth\\.ivy2\\cache\\org.typelevel\\macro-compat_2.12\\jars\\macro-compat_2.12-1.1.1.jar;F:\\IntelliJ IDEA Community Edition 2019.1.2\\lib\\idea_rt.jar",
            # system properties
            "version" : "52.0"
        },
        # system properties
        "endorsed" : {
            # system properties
            "dirs" : "C:\\Program Files\\Java\\jdk1.8.0_211\\jre\\lib\\endorsed"
        },
        # system properties
        "ext" : {
            # system properties
            "dirs" : "C:\\Program Files\\Java\\jdk1.8.0_211\\jre\\lib\\ext;C:\\WINDOWS\\Sun\\Java\\lib\\ext"
        },
        # system properties
        "home" : "C:\\Program Files\\Java\\jdk1.8.0_211\\jre",
        # system properties
        "io" : {
            # system properties
            "tmpdir" : "C:\\Users\\Srikanth\\AppData\\Local\\Temp\\"
        },
        # system properties
        "library" : {
            # system properties
            "path" : "C:\\Program Files\\Java\\jdk1.8.0_211\\bin;C:\\WINDOWS\\Sun\\Java\\bin;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\Program Files\\Docker\\Docker\\Resources\\bin;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files\\RedHat\\java-1.8.0-openjdk-1.8.0.212-3\\bin;C:\\Program Files\\Git\\cmd;C:\\Program Files (x86)\\scala\\bin;C:\\Program Files (x86)\\sbt\\bin;F:\\hadoop\\bin;F:\\hadoop\\sbin;C:\\sqlite;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\nodejs\\;C:\\Program Files\\MySQL\\MySQL Shell 8.0\\bin\\;C:\\Program Files\\heroku\\bin;C:\\Users\\Srikanth\\AppData\\Local\\GitHubDesktop\\bin;C:\\Users\\Srikanth\\AppData\\Local\\Programs\\Microsoft VS Code\\bin;C:\\Users\\Srikanth\\AppData\\Roaming\\npm;."
        },
        # system properties
        "runtime" : {
            # system properties
            "name" : "Java(TM) SE Runtime Environment",
            # system properties
            "version" : "1.8.0_211-b12"
        },
        # system properties
        "specification" : {
            # system properties
            "name" : "Java Platform API Specification",
            # system properties
            "vendor" : "Oracle Corporation",
            # system properties
            "version" : "1.8"
        },
        # system properties
        "vendor" : {
            # system properties
            "url" : {
                # system properties
                "bug" : "http://bugreport.sun.com/bugreport/"
            }
        },
        # system properties
        "version" : "1.8.0_211",
        # system properties
        "vm" : {
            # system properties
            "info" : "mixed mode",
            # system properties
            "name" : "Java HotSpot(TM) 64-Bit Server VM",
            # system properties
            "specification" : {
                # system properties
                "name" : "Java Virtual Machine Specification",
                # system properties
                "vendor" : "Oracle Corporation",
                # system properties
                "version" : "1.8"
            },
            # system properties
            "vendor" : "Oracle Corporation",
            # system properties
            "version" : "25.211-b12"
        }
    },
    # system properties
    "line" : {
        # system properties
        "separator" : "\r\n"
    },
    # system properties
    "os" : {
        # system properties
        "arch" : "amd64",
        # system properties
        "name" : "Windows 10",
        # system properties
        "version" : "10.0"
    },
    # system properties
    "path" : {
        # system properties
        "separator" : ";"
    },
    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 4
    # ssl configuration
    "ssl-config" : {
        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 16
        # Whether revocation lists should be checked, if null, defaults to platform default setting.
        "checkRevocation" : null,
        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 130
        # Debug configuration
        "debug" : {
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 132
            # Enable all debugging
            "all" : false,
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 147
            # The following settings are deprecated and have no effect in code.
            # DEPRECATED
            "certpath" : false,
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 153
            # DEPRECATED
            "data" : false,
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 157
            # DEPRECATED
            "defaultctx" : false,
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 152
            # DEPRECATED
            "handshake" : false,
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 155
            # DEPRECATED
            "keygen" : false,
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 141
            # Enable key manager tracing
            "keymanager" : false,
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 148
            # DEPRECATED
            "ocsp" : false,
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 151
            # DEPRECATED
            "packet" : false,
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 150
            # DEPRECATED
            "plaintext" : false,
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 159
            # DEPRECATED
            "pluggability" : false,
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 149
            # DEPRECATED
            "record" : false,
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 156
            # DEPRECATED
            "session" : false,
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 158
            # DEPRECATED
            "sessioncache" : false,
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 135
            # Enable sslengine / socket tracing
            "ssl" : false,
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 138
            # Enable SSLContext tracing
            "sslctx" : false,
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 144
            # Enable trust manager tracing
            "trustmanager" : false,
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 154
            # DEPRECATED
            "verbose" : false
        },
        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 10
        # Whether we should use the default JVM SSL configuration or not
        # When false additional configuration will be applied on the context (as configured in ssl-config).
        "default" : false,
        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 31
        # The disabled key algorithms
        "disabledKeyAlgorithms" : [
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 31
            "RSA keySize < 2048",
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 31
            "DSA keySize < 2048",
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 31
            "EC keySize < 224"
        ],
        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 28
        # The disabled signature algorithms
        "disabledSignatureAlgorithms" : [
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 28
            "MD2",
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 28
            "MD4",
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 28
            "MD5"
        ],
        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 22
        # The enabled cipher suites. If empty, uses the platform default.
        "enabledCipherSuites" : [],
        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 25
        # The enabled protocols. If empty, uses the platform default.
        "enabledProtocols" : [
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 25
            "TLSv1.2",
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 25
            "TLSv1.1",
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 25
            "TLSv1"
        ],
        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 36
        # The hostname verifier class.
        # If non null, should be the fully qualify classname of a class that imlpements HostnameVerifier,
        # otherwise the default will be used
        "hostnameVerifierClass" : null,
        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 51
        # Configuration for the key manager
        "keyManager" : {
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 53
            # The key manager algorithm. If empty, uses the platform default.
            "algorithm" : null,
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 59
            "prototype" : {
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 59
                # The key stores should look like this
                "stores" : {
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 67
                    # The data for the keystore. Either this must be non null, or path must be non null.
                    "data" : null,
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 71
                    # The password for loading the keystore. If null, uses no password.
                    # It's recommended to load password using environment variable
                    "password" : null,
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 64
                    # The path to the keystore file. Either this must be non null, or data must be non null.
                    "path" : null,
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 61
                    # The store type. If null, defaults to the platform default store type, ie JKS.
                    "type" : null
                }
            },
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 56
            # The key stores
            "stores" : []
        },
        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 6
        "logger" : "com.typesafe.sslconfig.util.NoopLogger",
        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 102
        # The loose ssl options.  These allow configuring ssl to be more loose about what it accepts,
        # at the cost of introducing potential security issues.
        "loose" : {
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 126
            # Whether any certificate should be accepted or not
            "acceptAnyCertificate" : false,
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 111
            # If non null, overrides the platform default for whether legacy hello messsages should be allowed.
            "allowLegacyHelloMessages" : null,
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 114
            # If non null, overrides the platform defalut for whether unsafe renegotiation should be allowed.
            "allowUnsafeRenegotiation" : null,
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 108
            # Whether weak ciphers should be allowed
            "allowWeakCiphers" : false,
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 105
            # Whether weak protocols should be allowed
            "allowWeakProtocols" : false,
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 117
            # Whether hostname verification should be disabled
            "disableHostnameVerification" : false,
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 123
            # Whether the SNI (Server Name Indication) TLS extension should be disabled
            # This setting MAY be respected by client libraries.
            # 
            # https://tools.ietf.org/html/rfc3546#sectiom-3.1
            "disableSNI" : false
        },
        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 13
        # The ssl protocol to use
        "protocol" : "TLSv1.2",
        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 19
        # A sequence of URLs for obtaining revocation lists
        "revocationLists" : [],
        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 38
        "sslParameters" : {
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 44
            # translates to a setNeedClientAuth / setWantClientAuth calls
            # "default" – leaves the (which for JDK8 means wantClientAuth and needClientAuth are set to false.)
            # "none"    – `setNeedClientAuth(false)`
            # "want"    – `setWantClientAuth(true)`
            # "need"    – `setNeedClientAuth(true)`
            "clientAuth" : "default",
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 47
            # protocols (names)
            "protocols" : []
        },
        # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 75
        "trustManager" : {
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 77
            # The trust manager algorithm. If empty, uses the platform default.
            "algorithm" : null,
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 83
            "prototype" : {
                # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 83
                # The key stores should look like this
                "stores" : {
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 91
                    # The data for the keystore. Either this must be non null, or path must be non null.
                    "data" : null,
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 95
                    # The password for loading the truststore. If null, uses no password.
                    # It's recommended to load password using environment variable
                    "password" : null,
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 88
                    # The path to the keystore file. Either this must be non null, or data must be non null.
                    "path" : null,
                    # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 85
                    # The store type. If null, defaults to the platform default store type, ie JKS.
                    "type" : null
                }
            },
            # reference.conf @ jar:file:/C:/Users/Srikanth/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.4.1.jar!/reference.conf: 80
            # The trust stores
            "stores" : []
        }
    },
    # system properties
    "sun" : {
        # system properties
        "arch" : {
            # system properties
            "data" : {
                # system properties
                "model" : "64"
            }
        },
        # system properties
        "boot" : {
            # system properties
            "class" : {
                # system properties
                "path" : "C:\\Program Files\\Java\\jdk1.8.0_211\\jre\\lib\\resources.jar;C:\\Program Files\\Java\\jdk1.8.0_211\\jre\\lib\\rt.jar;C:\\Program Files\\Java\\jdk1.8.0_211\\jre\\lib\\sunrsasign.jar;C:\\Program Files\\Java\\jdk1.8.0_211\\jre\\lib\\jsse.jar;C:\\Program Files\\Java\\jdk1.8.0_211\\jre\\lib\\jce.jar;C:\\Program Files\\Java\\jdk1.8.0_211\\jre\\lib\\charsets.jar;C:\\Program Files\\Java\\jdk1.8.0_211\\jre\\lib\\jfr.jar;C:\\Program Files\\Java\\jdk1.8.0_211\\jre\\classes"
            },
            # system properties
            "library" : {
                # system properties
                "path" : "C:\\Program Files\\Java\\jdk1.8.0_211\\jre\\bin"
            }
        },
        # system properties
        "cpu" : {
            # system properties
            "endian" : "little",
            # system properties
            "isalist" : "amd64"
        },
        # system properties
        "desktop" : "windows",
        # system properties
        "io" : {
            # system properties
            "unicode" : {
                # system properties
                "encoding" : "UnicodeLittle"
            }
        },
        # system properties
        "java" : {
            # system properties
            "command" : "org.ems.Main",
            # system properties
            "launcher" : "SUN_STANDARD"
        },
        # system properties
        "jnu" : {
            # system properties
            "encoding" : "Cp1252"
        },
        # system properties
        "management" : {
            # system properties
            "compiler" : "HotSpot 64-Bit Tiered Compilers"
        },
        # system properties
        "os" : {
            # system properties
            "patch" : {
                # system properties
                "level" : ""
            }
        }
    },
    # system properties
    "user" : {
        # system properties
        "country" : "US",
        # system properties
        "dir" : "F:\\EducationSystemManagement",
        # system properties
        "home" : "C:\\Users\\Srikanth",
        # system properties
        "language" : "en",
        # system properties
        "name" : "Srikanth",
        # system properties
        "script" : "",
        # system properties
        "timezone" : "Asia/Calcutta",
        # system properties
        "variant" : ""
    }
}
 {akkaAddress=akka://default, sourceThread=main, akkaSource=akka.actor.ActorSystemImpl(default), sourceActorSystem=default, akkaTimestamp=10:41:21.066UTC}
